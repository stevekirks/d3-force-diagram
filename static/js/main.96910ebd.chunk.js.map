{"version":3,"sources":["components/utils/utils.ts","components/utils/search-matching.ts","components/utils/superformula.ts","components/diagram.ts","components/constants.ts","components/diagram-styles.ts","components/utils/url-query-param-utils.ts","components/app.tsx","serviceWorker.ts","index.tsx"],"names":["nodeRadiusSizes","defaultNodeSuperformulaType","d","shapeType","nodes","getRadius","resultRadius","size","biggestSize","iNode","getHighlightedRadius","Math","sqrt","convexHulls","hulls","n","group","i","strToLowerOrEmpty","hasOwnProperty","offsetAndRadius","push","x","y","hullset","Object","keys","newHull","d3","path","drawCluster","curve","tension","transitionLinear","duration","ease","isNodeNotString","isLinkNotNode","undefined","source","getNodeId","nodeId","name","getLinkGradientId","sourceChild","getLinkSourceName","targetChild","target","getLinkTargetName","replace","getNodeNameOrGroup","node","getNodeNameAndGroup","getLinkSourceNameOrGroup","link","getLinkTargetNameOrGroup","getNodeOrLinkTitle","nodeOrLink","title","doGroupsMatch","node1","node2","findIndex","arr","callback","length","nodeTextShiftRight","multiplier","darkenIfInvertedBackground","color","isInverted","darker","toString","strEquals","val1","val2","toLowerCase","val","GetMatchedNodes","highlightedNodes","nodeElements","filter","nodeNameOrGroup","utils","DoesLinkMatch","l","onlyLinksWithHighlightedSourceAndTarget","linkSourceNameOrGroup","linkTargetNameOrGroup","highlightedSourceFound","highlightedTargetFound","GetMatchedLinks","linkElements","GetMatchedLinkGradients","GetMatchedHulls","hullElements","h","highlightedNode","highlightedNodesChangedCallback","sLine","Superformula","sType","sSize","sSegments","this","getPath","bind","f","sizeMultiplier","typeKey","SuperformulaTypes","_superformulaPath","params","diameter","t","dt","PI","r","ts","points","m","pow","abs","cos","a","n2","sin","b","n3","n1","SQRT1_2","asterisk","bean","butterfly","circle","clover","cloverFour","cross","diamond","drop","ellipse","gear","heart","heptagon","octagon","hexagon","malteseCross","pentagon","rectangle","roundedStar","square","star","triangle","colorScale","schemeDark2","slice","defaultSupaDupaPath","type","segments","nodeStateDefault","className","nodeTextShiftMultiplier","shapeSuperformula","nodeStateHighlight","nodeStateSearch","nodeStateHighlightNeighbour","nodeStateUnhighlighted","DiagramStyles","showOnlyHighlighted","invertedBackground","showAllLabels","mouseOverLock","mouseOutLock","nodeEles","clearStates","classed","nodeShape","selectAll","nodeText","transition","attr","constants","style","opacity","text","bigSuperdupaPath","bd","nodeState","getNodeStateProperties","mouseOverTransition","tween","nodeData","data","shiftFrom","shiftTo","Number","mouseOutTransition","linkEles","linkGradientEles","stopOne","stopTwo","hullEles","load","highlightedNodesChangedCallbackArg","initialHighlightedNodeNames","initiallyShowOnlyHighlighted","diagramWidth","floor","window","getComputedStyle","document","getElementById","width","diagramHeight","height","svg","append","on","onBackgroundDiagramClick","svgDefs","zoom","scaleExtent","translateExtent","zoomed","call","simulation","force","id","distance","slDatum","combinedRadiuses","strength","s","radius","distanceMin","html","process","then","uResponse","response","links","select","remove","updateSimulation","highlightedNodeName","nodeIdx","hn","cn","ungroupNodes","searchForNodes","searchText","hasSearchedForNodes","matchedNodes","indexOf","searchUtils","diagramStyles","show","highlightNodes","biggestNodePerGroup","linkGradients","hasForceSimulation","transform","zoomFactor","k","tickHulls","tickLinks","exit","linkGradientsEnter","enter","applyLinkGradientDefault","merge","linkEnterElements","applyLinkMouseOver","applyLinkMouseOut","PopulateInfoBox","applyLinkDefault","drager","dragged","dragended","nodeEnterElements","applyNodeMouseOver","applyNodeMouseOut","onNodeClick","onNodeDblclick","applyNodeDefault","hullEnterElements","applyHullDefault","groupedDictionaryOfNodes","groupedDic","nodeWithMostNumberOfInternalLinks","nodeWithLinkCount","numberOfInternalLinks","nodeName","kLink","isInternalLink","lNode","alpha","biggestNode","x1","y1","alphaMultiplier","xr","yr","xd","yd","bxr","byr","bxd","byd","isNaN","alphaMin","alphaDecay","alphaTarget","restart","stop","dragSimulationRestarted","idx","fx","fy","active","highlightedNodeIdx","splice","stopPropagation","newNodeGroup","internalLinks","kNode","mLink","m1","m1Link","regroupNodes","k1","random","k2","Array","prototype","apply","k3Link","childMNode","lLink","map","matchedNodesData","matchedLinks","matchedLinkGradients","unmatchedLinks","unmatchedLinkGradients","neighbourNodes","highlightedLinks","nodeNeighbourNamesOrGroups","highlightedNodeNamesOrGroups","highlightedLink","some","nog","nameOrGroup","highlightedAndNeighbourNodesData","concat","unmatchedNodes","matchedHulls","unmatchedHulls","highlightedHulls","applyNodeSearch","applyNodeHighlight","applyNodeHighlightedNeighbour","applyNodeUnhighlighted","applyLinkHighlight","applyLinkUnhighlighted","applyLinkGradientHighlight","applyLinkGradientUnhighlighted","applyHullHighlight","applyHullUnhighlighted","divServiceDetails","notes","tableElement","timestamp","details","tableData","row","getUrlParameter","sParam","keysString","sURLVariables","split","sParameterName","getKeysFromString","decodeURIComponent","location","search","substring","setUrlParameter","sValue","queryFilters","paramPairs","paramPair","parameterUpdated","join","updateKeysInString","history","pushState","App","props","highlightedNodeNames","paramValueStr","getUrlParameterAsArray","state","inputHighlightText","invertBackground","handleInputHighlightText","handleShowAllLabels","handleShowOnlyHighlighted","handleHighlightedNodesChanged","updateShowAllLabels","updateInputHighlightText","handleInvertBackground","handleHasForceSimulation","handleSearchForNodesClick","diagram","onChange","value","disabled","onClick","checked","htmlFor","setState","txt","sValueArray","setUrlParameterAsArray","event","newVal","currentTarget","preventDefault","invert","React","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+TAGaA,EAA6B,EAA7BA,EAAsC,EAAtCA,EAAgD,EAKtD,SAASC,EAA4BC,GAC1C,IAAIC,EAAY,SAIhB,OAHID,EAAEE,QACJD,EAAY,UAEPA,EA+DF,SAASE,EAAUH,GACxB,IAAII,EAAeN,EACnB,GAAIE,EAAEK,KACJD,EAAeJ,EAAEK,UACZ,GAAIL,EAAEE,MAAO,CAClBE,EAAeN,EACf,IAFkB,EAEdQ,EAAcN,EAAEE,MAAM,GAAGG,MAAQP,EAFnB,cAGEE,EAAEE,OAHJ,IAGlB,2BAA6B,CAAC,IAAnBK,EAAkB,QAC3BD,GAAeC,EAAMF,MAAQP,GAA2BQ,EAAcC,EAAMF,MAAQP,EAA0BQ,GAJ9F,8BAMlBF,EAAeE,EAAcF,EAAeE,EAAcF,EAE5D,OAAOA,EAGF,SAASI,EAAqBR,GAEnC,OADqBG,EAAUH,GAAKS,KAAKC,KAAKP,EAAUH,IAKnD,SAASW,EAAYT,GAC1B,IADiD,EAC3CU,EAAoD,GADT,cAIjCV,GAJiC,IAIjD,2BAAuB,CAAC,IAAbW,EAAY,QACrB,IAAIA,EAAEX,OAAUW,EAAEC,MAAlB,CAGA,IAAMC,EAAYC,EAAkBH,EAAEC,OACjCF,EAAMK,eAAeF,KACxBH,EAAMG,GAAK,IAEb,IAAMG,EAzGgB,GAyGef,EAAUU,GAAKJ,KAAKC,KAAKP,EAAUU,IACxED,EAAMG,GAAGI,KAAK,EAAEN,EAAEO,GAAK,GAAKF,GAAkBL,EAAEQ,GAAK,GAAKH,IAC1DN,EAAMG,GAAGI,KAAK,EAAEN,EAAEO,GAAK,GAAKF,GAAkBL,EAAEQ,GAAK,GAAKH,IAC1DN,EAAMG,GAAGI,KAAK,EAAEN,EAAEO,GAAK,GAAKF,GAAkBL,EAAEQ,GAAK,GAAKH,IAC1DN,EAAMG,GAAGI,KAAK,EAAEN,EAAEO,GAAK,GAAKF,GAAkBL,EAAEQ,GAAK,GAAKH,MAhBX,8BAqBjD,IADA,IAAMI,EAAkB,GACxB,MAAgBC,OAAOC,KAAKZ,GAA5B,eAAoC,CAA/B,IAAMG,EAAC,KACJU,EAAUC,IAAed,EAAMG,IACjCU,GACFH,EAAQH,KAAK,CAAEL,MAAOC,EAAGY,KAAMF,IAInC,OAAOH,EAGF,SAASM,EAAY5B,GAG1B,OAFc0B,MAAUG,MAAMH,IAAuBI,QAAQ,KACzCD,CAAM7B,EAAE2B,MAUvB,SAASI,EAAiBC,GAC/B,OAAON,MAEJM,SAASA,GACTC,KAAKP,KAGH,SAASQ,EAAgBd,GAC9B,MAAoB,kBAANA,EAGT,SAASe,EAAcf,GAC5B,YAA8BgB,IAAtBhB,EAAWiB,OAGd,SAASC,EAAUtC,GACxB,IAAIuC,EAAiB,GAYrB,OAXIL,EAAgBlC,GACdA,EAAEwC,MAAQxC,EAAEc,MACdyB,EAASvC,EAAEc,MAAQ,IAAMd,EAAEwC,KAClBxC,EAAEwC,KACXD,EAASvC,EAAEwC,KACFxC,EAAEc,QACXyB,EAASvC,EAAEc,OAGbyB,EAASvC,EAEJuC,EAmCF,SAASE,EAAkBzC,GAEhC,OAD2B,YAjC7B,SAA2BA,GACzB,OAAIA,EAAE0C,YACAR,EAAgBlC,EAAE0C,aACb1C,EAAE0C,YAAYF,KAEdxC,EAAE0C,YAGPR,EAAgBlC,EAAEqC,QACbrC,EAAEqC,OAAOG,KAETxC,EAAEqC,OAsB4BM,CAAkB3C,GAjB7D,SAA2BA,GACzB,OAAIA,EAAE4C,YACAV,EAAgBlC,EAAE4C,aACb5C,EAAE4C,YAAYJ,KAEdxC,EAAE4C,YAGPV,EAAgBlC,EAAE6C,QACb7C,EAAE6C,OAAOL,KAETxC,EAAE6C,OAMmDC,CAAkB9C,IAE/E+C,QAAQ,KAAM,KACdA,QAAQ,SAAU,MAClBA,QAAQ,qBAAsB,OAI5B,SAASC,EAAmBC,GACjC,OAAOA,EAAKT,MAAQS,EAAKnC,OAAS,GAG7B,SAASoC,EAAoBD,GAClC,OAAQA,EAAKnC,OAAS,IAAM,KAAOmC,EAAKT,MAAQ,IAG3C,SAASW,EAAyBC,GACvC,MAA8B,kBAAhBA,EAAKf,OAAsBe,EAAKf,OAASW,EAAmBI,EAAKf,QAG1E,SAASgB,EAAyBD,GACvC,MAA8B,kBAAhBA,EAAKP,OAAsBO,EAAKP,OAASG,EAAmBI,EAAKP,QAI1E,SAASS,EAAmBC,GACjC,IAAIC,EAAQ,GACRrB,EAAcoB,GAGhBC,EAAQ,SAFWL,EAAyBI,GAEZ,MADbF,EAAyBE,GAG5CC,EAAQR,EAAmBO,GAE7B,OAAOC,EAGF,SAASC,EAAcC,EAAaC,GACzC,OAAOD,GAASC,GAAwB,MAAfD,EAAM5C,OAAgC,MAAf6C,EAAM7C,OAAiBE,EAAkB0C,EAAM5C,SAAWE,EAAkB2C,EAAM7C,OAG7H,SAAS8C,EAAUC,EAAYC,GACpC,IAAK,IAAI/C,EAAI,EAAGA,EAAI8C,EAAIE,OAAQhD,IAC9B,IAAyB,IAArB+C,EAASD,EAAI9C,IACf,OAAOA,EAGX,OAAQ,EAGH,SAASiD,EAAmBhE,EAASiE,GAE1C,MAAO,cADa9D,EAAUH,GAAK,IAAMiE,GAAc,KACpB,MAW9B,SAASC,EAA2BC,EAAeC,GACxD,OAAOA,EACH1C,IACOyC,GACJE,OAAO,GACPC,WACHH,EAcC,SAASI,EAAUC,EAAuBC,GAC/C,OAAe,MAARD,GAAwB,MAARC,GAAgC,kBAATD,GAAqC,kBAATC,GAAqBD,EAAKE,gBAAkBD,EAAKC,cAGtH,SAAS1D,EAAkB2D,GAChC,OAAOA,GAAc,MAAPA,EAAcA,EAAID,cAAgB,GChR3C,SAASE,EACdC,EACAC,GAcA,OAZuBA,EAAaC,QAAO,SAAC/E,GAC1C,IAAMgF,EAAkBC,EAAyBjF,GACjD,GAAIgF,EAAgBjB,OAAS,EAAG,CAAC,IAAD,gBACAc,GADA,IAC9B,2BAAgD,CAE9C,GAAII,EAAgBD,EADeC,EADW,UAG5C,OAAO,GAJmB,+BAQhC,OAAO,KAkBX,SAASC,EAAcL,EAA0BM,EAASC,GACxD,IADmH,EAC7GC,EAAwBJ,EAA+BE,GACvDG,EAAwBL,EAA+BE,GACzDI,GAAyB,EACzBC,GAAyB,EAJsF,cAMrFX,GANqF,IAMnH,2BAAgD,CAAC,IACzCG,EAAkBC,EADsB,SAE9C,IAAgD,IAA5CG,EACEH,EAAgBD,EAAiBK,KACnCE,GAAyB,GAEvBN,EAAgBD,EAAiBM,KACnCE,GAAyB,QAEtB,GAAIP,EAAgBD,EAAiBK,IAA0BJ,EAAgBD,EAAiBM,GACrG,OAAO,GAhBwG,8BAmBnH,OAAOC,GAA0BC,EAI5B,SAASC,EACdZ,EACAa,EACAN,GAKA,OAHqBM,EAAaX,QAAO,SAACI,GACxC,OAAOD,EAAcL,EAAkBM,EAAGC,MAKvC,SAASO,EACdd,EACAa,EACAN,GAKA,OAHqBM,EAAaX,QAAO,SAACI,GACxC,OAAOD,EAAcL,EAAkBM,EAAGC,MAiCvC,SAASQ,EACdf,EACAgB,GAYA,OAVqBA,EAAad,QAAO,SAACe,GACxC,GAAIA,EAAEhF,MAAMiD,OAAS,EAAG,CAAC,IAAD,gBACQc,GADR,IACtB,2BAAgD,CAAC,IAAtCkB,EAAqC,QAC9C,GAAId,EAAgBa,EAAEhF,MAAOiF,EAAgBjF,OAC3C,OAAO,GAHW,+BAOxB,OAAO,KCrIX,ICkGIkF,EAEA9F,EDpGE+F,EAAQvE,MAERwE,E,WAKJ,aAAe,yBAJPC,WAIM,OAHNC,WAGM,OAFNC,eAEM,EAEZC,KAAKH,MAAQ,SAAAnG,GAAC,MAAI,UAClBsG,KAAKF,MAAQ,SAAApG,GAAC,OAAI,GAClBsG,KAAKD,UAAY,IAEjBC,KAAKC,QAAUD,KAAKC,QAAQC,KAAKF,M,iDAGvBG,GAEV,OADAH,KAAKH,MAAQM,EACNH,O,2BAEGG,GAEV,OADAH,KAAKF,MAAQK,EACNH,O,+BAEOtG,GAEd,OADAsG,KAAKD,UAAYrG,EACVsG,O,8BAGMtG,EAAS0G,GACtB,IAAIP,EACEQ,EAAUL,KAAKH,MAAMnG,GAE3B,OADAmG,EAAQS,EAAkBD,GACnBL,KAAKO,kBAAkBV,EAAOG,KAAKD,UAAWC,KAAKF,MAAMpG,IAAM0G,GAAkB,M,iCAIxF,OAAOhF,IAAQkF,K,wCAGSE,EAAgCjG,EAAWkG,GAUnE,IATA,IAEIC,EAEA5F,EACAC,EALAN,GAAa,EACXkG,EAAc,EAAIxG,KAAKyG,GAAMrG,EAE/BsG,EAAY,EAGVC,EAAe,GACfC,EAAkC,KAE/BtG,EAAIF,GACXmG,EAAKF,EAAOQ,GAAKvG,EAAIkG,EAAKxG,KAAKyG,IAAO,GACtCF,EAAIvG,KAAK8G,IACP9G,KAAK+G,IAAI/G,KAAK8G,IAAI9G,KAAK+G,IAAI/G,KAAKgH,IAAIT,GAAKF,EAAOY,GAAIZ,EAAOa,IAAMlH,KAAK8G,IAAI9G,KAAK+G,IAAI/G,KAAKmH,IAAIZ,GAAKF,EAAOe,GAAIf,EAAOgB,MAClH,EAAIhB,EAAOiB,KAENZ,IACNA,EAAIH,GAENI,EAAGjG,KAAK6F,GAKV,IAFAG,EAAKJ,EAAWtG,KAAKuH,QAAWb,EAChCpG,GAAK,IACIA,EAAIF,GACXO,GAAK4F,EAAII,EAAGrG,GAAKoG,GAAK1G,KAAKgH,IAAI1G,EAAIkG,GACnC5F,EAAI2F,EAAIvG,KAAKmH,IAAI7G,EAAIkG,GACrBI,EAAOlG,KAAK,CAACV,KAAK+G,IAAIpG,GAAK,KAAO,EAAIA,EAAGX,KAAK+G,IAAInG,GAAK,KAAO,EAAIA,IAGpE,OAAO4E,EAAMoB,GAAU,Q,KAuCrBT,EAAuC,CAC3CqB,SAAU,CAAEX,EAAG,GAAIS,GAAI,GAAKJ,GAAI,EAAGG,GAAI,GAAIJ,EAAG,EAAGG,EAAG,GACpDK,KAAM,CAAEZ,EAAG,EAAGS,GAAI,EAAGJ,GAAI,EAAGG,GAAI,EAAGJ,EAAG,EAAGG,EAAG,GAC5CM,UAAW,CAAEb,EAAG,EAAGS,GAAI,EAAGJ,GAAI,EAAGG,GAAI,EAAGJ,EAAG,GAAKG,EAAG,GACnDO,OAAQ,CAAEd,EAAG,EAAGS,GAAI,EAAGJ,GAAI,EAAGG,GAAI,EAAGJ,EAAG,EAAGG,EAAG,GAC9CQ,OAAQ,CAAEf,EAAG,EAAGS,GAAI,GAAKJ,GAAI,EAAGG,GAAI,GAAIJ,EAAG,EAAGG,EAAG,GACjDS,WAAY,CAAEhB,EAAG,EAAGS,GAAI,GAAIJ,IAAK,EAAGG,IAAK,EAAGJ,EAAG,EAAGG,EAAG,GACrDU,MAAO,CAAEjB,EAAG,EAAGS,GAAI,IAAKJ,GAAI,IAAMG,GAAI,EAAGJ,EAAG,EAAGG,EAAG,GAClDW,QAAS,CAAElB,EAAG,EAAGS,GAAI,EAAGJ,GAAI,EAAGG,GAAI,EAAGJ,EAAG,EAAGG,EAAG,GAC/CY,KAAM,CAAEnB,EAAG,EAAGS,GAAI,GAAKJ,GAAI,GAAKG,GAAI,GAAKJ,EAAG,EAAGG,EAAG,GAClDa,QAAS,CAAEpB,EAAG,EAAGS,GAAI,EAAGJ,GAAI,EAAGG,GAAI,EAAGJ,EAAG,EAAGG,EAAG,GAC/Cc,KAAM,CAAErB,EAAG,GAAIS,GAAI,IAAKJ,GAAI,GAAIG,GAAI,GAAIJ,EAAG,EAAGG,EAAG,GACjDe,MAAO,CAAEtB,EAAG,EAAGS,GAAI,GAAKJ,GAAI,EAAGG,IAAK,EAAGJ,EAAG,EAAGG,EAAG,KAChDgB,SAAU,CAAEvB,EAAG,EAAGS,GAAI,IAAMJ,GAAI,IAAKG,GAAI,IAAKJ,EAAG,EAAGG,EAAG,GACvDiB,QAAS,CAAExB,EAAG,EAAGS,GAAI,IAAMJ,GAAI,IAAKG,GAAI,IAAKJ,EAAG,EAAGG,EAAG,GACtDkB,QAAS,CAAEzB,EAAG,EAAGS,GAAI,IAAMJ,GAAI,IAAKG,GAAI,IAAKJ,EAAG,EAAGG,EAAG,GACtDmB,aAAc,CAAE1B,EAAG,EAAGS,GAAI,GAAKJ,GAAI,GAAKG,GAAI,IAAKJ,EAAG,EAAGG,EAAG,GAC1DoB,SAAU,CAAE3B,EAAG,EAAGS,GAAI,IAAMJ,GAAI,IAAKG,GAAI,IAAKJ,EAAG,EAAGG,EAAG,GACvDqB,UAAW,CAAE5B,EAAG,EAAGS,GAAI,IAAKJ,GAAI,IAAKG,GAAI,IAAKJ,EAAG,EAAGG,EAAG,GACvDsB,YAAa,CAAE7B,EAAG,EAAGS,GAAI,EAAGJ,GAAI,EAAGG,GAAI,EAAGJ,EAAG,EAAGG,EAAG,GACnDuB,OAAQ,CAAE9B,EAAG,EAAGS,GAAI,IAAKJ,GAAI,IAAKG,GAAI,IAAKJ,EAAG,EAAGG,EAAG,GACpDwB,KAAM,CAAE/B,EAAG,EAAGS,GAAI,GAAIJ,GAAI,IAAKG,GAAI,IAAKJ,EAAG,EAAGG,EAAG,GACjDyB,SAAU,CAAEhC,EAAG,EAAGS,GAAI,IAAKJ,GAAI,IAAKG,GAAI,IAAKJ,EAAG,EAAGG,EAAG,I,QEpI3C0B,EAAa7H,IAAgB8H,IAAYC,SCUhDC,GAAsB,IAAIxD,GAC7ByD,KAAK1E,GACL5E,MLCI,SAAqCL,GAC1C,OAAO,EAAIG,EAAUH,MKDpB4J,SAAS,KAENC,EAAwC,CAC5CC,UAAW,qBACXC,wBAAyB,IACzBC,kBAAmBN,GAEfO,EAA0C,CAC9CH,UAAW,uBACXC,wBAAyB,IACzBC,mBAAmB,IAAI9D,GAAeyD,KAAK1E,GAAmC5E,MAAK,SAAAL,GACjF,OAAO,IAAMiF,EAA2BjF,OAGtCkK,EAAuC,CAC3CJ,UAAW,oBACXC,wBAAyB,IACzBC,mBAAmB,IAAI9D,GACpByD,MAAK,iBAAM,UACXtJ,MAAK,SAAAL,GACJ,OAAO,EAAIiF,EAA2BjF,OAGtCmK,GAAmD,CACvDL,UAAW,iCACXC,wBAAyB,IACzBC,kBAAmBN,GAEfU,GAA8C,CAClDN,UAAW,2BACXC,wBAAyB,IACzBC,kBAAmBN,GAGRW,GAAb,iDACSC,qBAA+B,EADxC,KAESC,oBAA8B,EAFvC,KAGSC,eAAyB,EAHlC,KAIUC,cAAqB,GAJ/B,KAKUC,aAAoB,GAL9B,6DAO0BC,GAA8D,IAAD,OACnFC,GAAYD,GACZA,EAASE,QAAQhB,EAAiBC,WAAW,GAC7C,IAAMgB,EAAYH,EAASI,UAAU,eAC/BC,EAAWL,EAASI,UAAU,cACpCD,EACGG,WAAWhG,EAxDa,MAyDxBiG,KAAK,KAAK,SAAClL,GAAD,OAAgB6J,EAAiBG,kBAAkBzD,QAAQvG,MACrEkL,KAAK,gBAAgB,SAAClL,GAAD,OAAgB,KACrCkL,KAAK,UAAU,SAAClL,GAAD,OAAgBmL,EAAqBlG,EAAyBjF,EAAWc,WACxFoK,KAAK,QAAQ,SAAClL,GAAD,OAAgBmL,EAAqBlG,EAAyBjF,EAAWc,WACtFsK,MAAM,iBAAkB,GACxBA,MAAM,eAAgB,GACzBJ,EACGI,MAAM,WAAW,SAACpL,GAAD,OL4LjB,SAAyBA,EAASwK,GACvC,IAAIa,EAAU,EAId,OAHIlL,EAAUH,IAAM,IAAMwK,KACxBa,EAAU,GAELA,EKjM+BpG,CAAsBjF,EAAW,EAAKwK,kBACvEU,KAAK,cAAe,SACpBA,KAAK,oBAAqB,WAC1BA,KAAK,aAAa,SAAClL,GAAD,OAAgBiF,EAAyBjF,MAC3DsL,MAAK,SAACtL,GAAD,OAAiBA,EAAWwC,MAASxC,EAAWc,OAAS,QAzBrE,sCA4ByB6J,GACrBC,GAAYD,GACZA,EAASE,QAAQX,EAAgBJ,WAAW,GAC5C,IAAMgB,EAAYH,EAASI,UAAU,eAC/BC,EAAWL,EAASI,UAAU,cAC9BQ,GAAmB,IAAIrF,GAAeyD,MAAK,iBAAM,UACvDmB,EACGG,aACAjJ,SA7E4B,KA8E5BkJ,KAAK,KAAK,SAAClL,GAAD,OACTuL,EACGlL,MAAK,SAAAmL,GACJ,OAAO,EAAIvG,EAA2BuG,MAEvCjF,QAAQvG,MAEZkL,KAAK,UAAU,SAAClL,GAAD,MDxFQ,aCyFvBkL,KAAK,QAAQ,SAAClL,GAAD,MDzFU,aC0FvBoL,MAAM,iBAAkB,GACxBA,MAAM,eAAgB,GACtBH,aACAjJ,SAzFwB,KA0FxBkJ,KAAK,KAAK,SAAClL,GAAD,OAAgBkK,EAAgBF,kBAAkBzD,QAAQvG,MACvEgL,EACGC,aACAjJ,SA/FsB,KAgGtBoJ,MAAM,UAAW,GACjBF,KAAK,aAAa,SAAClL,GAClB,OAAOiF,EAAyBjF,EAAWkK,EAAgBH,8BAxDnE,yCA4D4BY,GAA8D,IAAD,OACrFC,GAAYD,GACZA,EAASE,QAAQZ,EAAmBH,WAAW,GAC/C,IAAMgB,EAAYH,EAASI,UAAU,eAC/BC,EAAWL,EAASI,UAAU,cACpCD,EACGG,aACAjJ,SA3GwB,KA4GxBkJ,KAAK,KAAK,SAAClL,GAAD,OAAgBiK,EAAmBD,kBAAkBzD,QAAQvG,MACvEkL,KAAK,UAAU,kBAAMjG,EDjHE,UCiHyD,EAAKsF,uBACrFW,KAAK,QAAQ,kBAAMjG,EDlHI,UCkHuD,EAAKsF,uBACnFa,MAAM,iBAAkB,GACxBA,MAAM,eAAgB,GACzBJ,EACGC,aACAjJ,SArHsB,KAsHtBoJ,MAAM,UAAW,GACjBF,KAAK,aAAa,SAAClL,GAClB,OAAOiF,EAAyBjF,EAAWiK,EAAmBF,8BA9EtE,oDAkFuCY,GAA8D,IAAD,OAChGC,GAAYD,GACZA,EAASE,QAAQV,GAA4BL,WAAW,GACxD,IAAMgB,EAAYH,EAASI,UAAU,eAC/BC,EAAWL,EAASI,UAAU,cACpCD,EACGG,aACAjJ,SAnIsB,KAoItBkJ,KAAK,KAAK,SAAClL,GAAD,OAAgBmK,GAA4BH,kBAAkBzD,QAAQvG,MAChFkL,KAAK,UAAU,kBAAMjG,EDtIO,UCsIyD,EAAKsF,uBAC1FW,KAAK,QAAQ,kBAAMjG,EDvIS,UCuIuD,EAAKsF,uBACxFa,MAAM,iBAAkB,GACxBA,MAAM,eAAgB,GACzBJ,EACGC,aACAjJ,SA3IsB,KA4ItBoJ,MAAM,UAAW,KAlGxB,6CAqGgCT,GAA8D,IAAD,OACzFC,GAAYD,GACZA,EAASE,QAAQT,GAAuBN,WAAW,GACnD,IAAMgB,EAAYH,EAASI,UAAU,eAC/BC,EAAWL,EAASI,UAAU,cACpCD,EACGG,aACAjJ,SAtJsB,KAuJtBkJ,KAAK,KAAK,SAAClL,GAAD,OAAgBoK,GAAuBJ,kBAAkBzD,QAAQvG,MAC3EkL,KAAK,UAAU,kBAAMjG,EDzJO,UCyJyD,EAAKsF,uBAC1FW,KAAK,QAAQ,kBAAMjG,ED1JS,UC0JuD,EAAKsF,uBACxFa,MAAM,iBAAkB9E,KAAKgE,oBAAsB,ED1JrB,IC2J9Bc,MAAM,eAAgB9E,KAAKgE,oBAAsB,ED3JnB,IC4JjCU,EACGC,aACAjJ,SA9JsB,KA+JtBoJ,MAAM,WAAW,kBAAO,EAAKd,oBAAsB,EAAI,EAAKE,cAAgB,EAAI,KAChFU,KAAK,aAAa,SAAAlL,GACjB,OAAOiF,EAAyBjF,QAvHxC,yCA2H4B2K,GACxB,IAAMc,EAAYC,GAAuBf,GACnCG,EAAYH,EAASI,UAAU,eAC/BC,EAAWL,EAASI,UAAU,cAE9BY,EAAsBjK,IAClB4E,KAAKmE,eACZQ,aACAjJ,SA1KuB,KA2K1B2J,EAAoBC,MAAM,sBAAsB,WAC9C,IAAM7K,EAAIW,IAAqB,EAAG,IAClC,OAAO,SAACsF,GACN8D,EAAUM,MAAM,eAAgBrK,EAAEiG,QAGtC2E,EAAoBC,MAAM,kBAAkB,WAC1C,IAAMC,EAAWlB,EAASmB,OAAO,GAC3BC,EAAY9G,EAAyB4G,EAAUJ,EAAU1B,yBACzDiC,EAAU/G,EAAyB4G,EAA8C,IAApCJ,EAAU1B,yBACvDhJ,EAAIW,IAAqBqK,EAAWC,GAC1C,OAAO,SAAChF,GACNgE,EAASE,KAAK,YAAanK,EAAEiG,SAGA,IAA7BV,KAAKgE,qBAAiC2B,OAAOjB,EAASI,MAAM,YAAc,IAC5EJ,EAASH,QAAQ,aAAa,GAC9Bc,EAAoBC,MAAM,iBAAiB,WACzC,IAAM7K,EAAIW,IAAqBuK,OAAOjB,EAASI,MAAM,YAAa,GAClE,OAAO,SAACpE,GACNgE,EAASI,MAAM,UAAWrK,EAAEiG,WAxJtC,wCA8J2B2D,GACvB,IAAMc,EAAYC,GAAuBf,GACnCG,EAAYH,EAASI,UAAU,eAC/BC,EAAWL,EAASI,UAAU,cAE9BmB,EAAqBxK,IACjB4E,KAAKoE,cACZO,aACAjJ,SA7MuB,KA8M1BkK,EAAmBN,MAAM,sBAAsB,WAC7C,IAAM7K,EAAIW,IAAqB,GAAI,GACnC,OAAO,SAACsF,GACN8D,EAAUM,MAAM,eAAgBrK,EAAEiG,QAGtCkF,EAAmBN,MAAM,kBAAkB,WACzC,IAAMC,EAAWlB,EAASmB,OAAO,GAC3BE,EAAU/G,EAAyB4G,EAAUJ,EAAU1B,yBACvDgC,EAAY9G,EAAyB4G,EAA8C,IAApCJ,EAAU1B,yBACzDhJ,EAAIW,IAAqBqK,EAAWC,GAC1C,OAAO,SAAChF,GACNgE,EAASE,KAAK,YAAanK,EAAEiG,QAG7BgE,EAASH,QAAQ,eACnBG,EAASH,QAAQ,aAAa,GAC1BY,EAAU3B,YAAcG,EAAmBH,WAC7CoC,EAAmBN,MAAM,iBAAiB,WACxC,IAAM7K,EAAIW,IAAqB,EAAG,GAClC,OAAO,SAACsF,GACNgE,EAASI,MAAM,UAAWrK,EAAEiG,WA5LxC,uCAmM0BmF,GACtBA,EACGjB,KAAK,eDlP0B,KCmP/BA,KAAK,UAAU,SAAAlL,GACd,MAAO,QAAUiF,EAAwBjF,GAAK,OAE/CiL,WAAWhG,EApPa,MAqPxBmG,MAAM,iBAAkB,KA1M/B,yCA6M4Be,GACxBA,EACGlB,aACAjJ,SA1PsB,KA2PtBoJ,MAAM,iBAAkB,KAjN/B,yCAoN4Be,GACxBA,EAASjB,KAAK,eAAgBC,OArNlC,wCAwN2BgB,GACvBA,EAASjB,KAAK,eDtQoB,OC6CtC,6CA4NgCiB,GAC5BA,EACGlB,aACAjJ,SAzQsB,KA0QtBoJ,MAAM,iBAAkB9E,KAAKgE,oBAAsB,ED1QrB,MC0CrC,+CAmOkC8B,GAC9B,IAAMC,EAAUD,EAAiBrB,UAAU,qBACrCuB,EAAUF,EAAiBrB,UAAU,qBAC3CqB,EAAiBlB,KAAK,KAAMjG,GAAyBiG,KAAK,gBAAiB,kBAC3EmB,EAAQnB,KAAK,SAAU,MAAMA,KAAK,aDhRA,WCiRlCoB,EACGpB,KAAK,SAAU,QACfA,KAAK,aAAc5E,KAAKiE,mBDjRa,UADR,aCwCpC,iDA6OoC6B,GAChCA,EACGrB,UAAU,qBACVE,aACAjJ,SA3RsB,KA4RtBkJ,KAAK,aAAc5E,KAAKiE,mBDzRa,UADR,aCwCpC,qDAqPwC6B,GACpCA,EACGrB,UAAU,qBACVE,aACAjJ,SAnSsB,KAoStBkJ,KAAK,aAAc5E,KAAKiE,mBDjSa,UADR,aCwCpC,uCA6P0BgC,GACtBA,EACGrB,KAAK,IAAKjG,GACVgG,aACAjJ,SA3SsB,KA4StBoJ,MAAM,QAAQ,SAACpL,GAAD,OAAamL,EAAqBnL,EAAEc,OAAS,OAC3DsK,MAAM,eAAgB,MAnQ7B,yCAsQ4BmB,GACxBA,EACGtB,aACAjJ,SAnTsB,KAoTtBoJ,MAAM,ODtTiB,WCuTvBA,MAAM,eAAgB9E,KAAKgE,oBAAsB,EAAI,MA3Q5D,6CA8QgCiC,GAC5BA,EACGtB,aACAjJ,SA3TsB,KA4TtBoJ,MAAM,OD7TsB,WC8T5BA,MAAM,eAAgB9E,KAAKgE,oBAAsB,EAAI,SAnR5D,KAuRA,SAASM,GAAYD,GACnBA,EAASE,QAAQhB,EAAiBC,WAAW,GAC7Ca,EAASE,QAAQZ,EAAmBH,WAAW,GAC/Ca,EAASE,QAAQX,EAAgBJ,WAAW,GAC5Ca,EAASE,QAAQV,GAA4BL,WAAW,GACxDa,EAASE,QAAQT,GAAuBN,WAAW,GAGrD,SAAS4B,GAAuBf,GAC9B,OAAIA,EAASE,QAAQhB,EAAiBC,WAC7BD,EACEc,EAASE,QAAQZ,EAAmBH,WACtCG,EACEU,EAASE,QAAQX,EAAgBJ,WACnCI,EACES,EAASE,QAAQV,GAA4BL,WAC/CK,GACEQ,EAASE,QAAQT,GAAuBN,WAC1CM,GAEFP,EFtVF,SAAS2C,GACdC,EACAC,EACAC,GAEA3G,EAAkCyG,EAmIlCG,GAAenM,KAAKoM,MAAMZ,OAAOa,OAAOC,iBAAiBC,SAASC,eAAe,YAAaC,MAAOnK,QAAQ,KAAM,MAAQ,GAC3HoK,GAAgB1M,KAAKoM,MAAMZ,OAAOa,OAAOC,iBAAiBC,SAASC,eAAe,YAAaG,OAAQrK,QAAQ,KAAM,MAAQ,GAE7HsK,GAAM3L,IACI,YACP4L,OAAO,OACPzC,QAAQ,qBAAqB,GAC7BK,KAAK,QAAS0B,IACd1B,KAAK,SAAUiC,IACfI,GAAG,QAASC,IAEfC,GAAUJ,GAAIC,OAAO,QAErBD,GACGC,OAAO,KACPzC,QAAQ,SAAS,GAEpBwC,GAAIC,OAAO,KAAKzC,QAAQ,SAAS,GAEjCwC,GACGC,OAAO,KACPzC,QAAQ,SAAS,GAKpB6C,GAAOhM,MAEJiM,YAAY,CAAC,EAAG,KAChBC,gBAAgB,CACf,CAAC,EAAIhB,GAAc,EAAIO,IACvB,CAAgB,EAAfP,GAAkC,EAAhBO,MAEpBI,GAAG,OAAQM,IAEdR,GAAIS,KAAKJ,IAAaH,GAAG,gBAAiB,MAG1CQ,GAAarM,MAEVsM,MACC,OACAtM,MAEGuM,IAAG,SAACjO,GAAD,OAAaiF,EAAyBjF,MACzCkO,UAAS,SAACC,GACT,IAAMhJ,EAAIgJ,EACJpG,EAAK5C,EAAE9C,OACPsF,EAAKxC,EAAEtC,OACT7C,EAAYiF,EAChB,GAAIA,EAAsB8C,IAAO9C,EAAsB0C,GAAK,CAC1D,IAAMyG,EAA2BnJ,EAAgB8C,GAAM9C,EAAgB0C,GACvE3H,EAAIiF,EAAoB8C,EAAIJ,GAAMyG,EAAsC,EAAnBA,EAEvD,OAAOpO,KAERqO,UAAS,SAACF,GACT,IAAMhJ,EAAIgJ,EACNG,EAAY,GAIhB,MAHwB,kBAAbnJ,EAAE9C,QAA2C,kBAAb8C,EAAEtC,SAC3CyL,EAAIrJ,EAAoBE,EAAE9C,OAAQ8C,EAAEtC,QAAU,IAAO,IAEhDyL,MAGZN,MACC,UACAtM,MAAkB6M,QAAO,SAACvO,GAAD,OAAaiF,EAAgBjF,GAAK,OAE5DgO,MACC,SACAtM,MAEG2M,UAAU,KACVG,YAAY,MAEhBR,MAAM,IAAKtM,IAAUkL,GAAe,IACpCoB,MAAM,IAAKtM,IAAUyL,GAAgB,IA3MxCzL,IAAU,YACP4L,OAAO,MACPzC,QAAQ,gBAAgB,GACxB4D,KAAK,2DAIR/M,IADwBgN,sBACPC,MAAK,SAACC,GACrB,IAAMC,EAAWD,EACjB1O,EAAQ2O,EAAS3O,MACjB4O,GAAQD,EAASC,MAGjBpN,IAAU,YACPqN,OAAO,iBACPC,SARyC,oBAW5B9O,GAX4B,IAW5C,2BAAuB,CAAC,IAAbF,EAAY,QACrBA,EAAEoB,EAAIwL,GAAe,EACrB5M,EAAEqB,EAAI8L,GAAgB,GAboB,8BAoB5C,GAHA8B,KAGIvC,EAA4B3I,OAAS,EAAG,CAAC,IAAD,gBACR2I,GADQ,yBAC/BwC,EAD+B,QAGlCC,EAAUlK,EAAgB/E,GAAO,SAACkP,GAAD,OAAcnK,EAAgBA,EAA0BmK,GAAKF,MACpG,GAAIC,GAAW,EAEbtK,GAAiB1D,KAAKjB,EAAMiP,QACvB,qBAEYjP,GAFZ,IAEL,2BAAwB,CAAC,IAAdkP,EAAa,QACtB,GAAIA,EAAGlP,MAAO,CAAC,IAAD,gBACKkP,EAAGlP,OADR,IACZ,2BAA2B,CAAC,IAAjBmP,EAAgB,QACrBpK,EAAgBA,EAA0BoK,GAAKH,KACjDrK,GAAiB1D,KAAKkO,GACtBC,GAAaF,KAJL,iCAHX,iCANT,2BAAgE,IADtB,8BAqB1C9E,GAAoBqC,OAKnB,SAAS4C,GAAeC,GAC7B,GAAmB,KAAfA,EACF3K,GAAmB,GACnB4K,IAAsB,MACjB,CACL,IAAMC,EFtEH,SACLF,EACA1K,GASA,OAPqBA,EAAaC,QAAO,SAAC/E,GACxC,IAAMwD,EAAQyB,EAAyBjF,GACvC,OAAIwD,EAAMO,OAAS,IACiD,IAA3DP,EAAMkB,cAAciL,QAAQH,EAAW9K,kBE+D3BkL,CAAwBJ,EAAY1K,IACzDD,GAAmB6K,EAAa5D,OAChC2D,IAAsB,EAExBnF,GAAoBuF,GAAcvF,qBAAuBzF,GAAiBd,OAAS,GAQ9E,SAASuG,GAAoBwF,GAClCD,GAAcvF,oBAAsBwF,EACpCC,KAgBF,IACIjB,GACAkB,GAEApD,GACAO,GAKArI,GACAY,GACAuK,GACApK,GAEAwH,GACAI,GAUAC,GA1BA7I,GAA2B,GAkB3B4K,IAVY/N,KAUmB,GAC/BwO,IAA8B,EAI5BL,GAAgB,IAAIxF,GAI1B,SAASwD,KACPR,GAAI0B,OAAO,UAAU7D,KAAK,YAAaxJ,IAASyO,WAChD9C,GAAI0B,OAAO,UAAU7D,KAAK,YAAaxJ,IAASyO,WAChD9C,GAAI0B,OAAO,UAAU7D,KAAK,YAAaxJ,IAASyO,WAChD,IAAMC,EAAkB1O,IAASyO,UAAUE,EAC3C3O,IAAa,cAAc0J,MAAM,YAAmB,EAAIgF,EAAV,GAAwB,MAGxE,IAAIrC,GAAwCrM,MAmF5C,SAAS4O,KACPzK,GAAaiG,KAAK7G,EAAkB/E,IAAQgL,KAAK,IAAKjG,GAGxD,SAASsL,KACP7K,GACGwF,KAAK,MAAM,SAAClL,GACX,OAAOiF,EAAsBjF,EAAEqC,SAAWrC,EAAEqC,OAAOjB,EAAIpB,EAAEqC,OAAOjB,EAAI,KAErE8J,KAAK,MAAM,SAAClL,GACX,OAAOiF,EAAsBjF,EAAEqC,SAAWrC,EAAEqC,OAAOhB,EAAIrB,EAAEqC,OAAOhB,EAAI,KAErE6J,KAAK,MAAM,SAAClL,GACX,OAAOiF,EAAsBjF,EAAE6C,SAAW7C,EAAE6C,OAAOzB,EAAIpB,EAAE6C,OAAOzB,EAAI,KAErE8J,KAAK,MAAM,SAAClL,GACX,OAAOiF,EAAsBjF,EAAE6C,SAAW7C,EAAE6C,OAAOxB,EAAIrB,EAAE6C,OAAOxB,EAAI,KAExE4O,GACG/E,KAAK,MAAM,SAAClL,GACX,OAAOiF,EAAsBjF,EAAEqC,SAAWrC,EAAEqC,OAAOjB,EAAIpB,EAAEqC,OAAOjB,EAAI,KAErE8J,KAAK,MAAM,SAAClL,GACX,OAAOiF,EAAsBjF,EAAEqC,SAAWrC,EAAEqC,OAAOhB,EAAIrB,EAAEqC,OAAOhB,EAAI,KAErE6J,KAAK,MAAM,SAAClL,GACX,OAAOiF,EAAsBjF,EAAE6C,SAAW7C,EAAE6C,OAAOzB,EAAIpB,EAAE6C,OAAOzB,EAAI,KAErE8J,KAAK,MAAM,SAAClL,GACX,OAAOiF,EAAsBjF,EAAE6C,SAAW7C,EAAE6C,OAAOxB,EAAIrB,EAAE6C,OAAOxB,EAAI,KAI1E,SAAS4N,KACPvJ,GAAe2H,GACZ0B,OAAO,UACPhE,UAAU,QACVe,KAAKgD,GAAO7J,GACfgL,GAAgBxC,GAAQ1C,UAAU,kBAAkBe,KAAKgD,GAAO7J,GAEhEH,GAAeuI,GACZ0B,OAAO,UACPhE,UAAU,SACVe,KAAK5L,EAAO+E,GAEfY,GAAewH,GACZ0B,OAAO,UACPhE,UAAU,aACVe,KAAK7G,EAAkB/E,IAE1B+P,GAAcO,OAAOxB,SACrB,IAAMyB,EAAqBR,GAAcS,QAAQpD,OAAO,kBACxDmD,EAAmBnD,OAAO,QAC1BmD,EAAmBnD,OAAO,QAC1BuC,GAAcc,yBAAyBF,GACvCR,GAAgBQ,EAAmBG,MAAMX,IAEzCvK,GACG8K,OACAvF,WAAWhG,EAAuB,MAClCmG,MAAM,iBAAkB,MACxB4D,SACH,IAAM6B,EAAoBnL,GAAagL,QAAQpD,OAAO,QACtDuD,EACGtD,GAAG,aAAa,SAASvN,EAAGe,GAE3B8O,GAAciB,mBAAmBpP,IAAU4E,UAG5CiH,GAAG,YAAY,SAASvN,EAAGe,GAC1B8O,GAAckB,kBAAkBrP,IAAU4E,UAG3CiH,GAAG,QAASyD,IACZ5F,MAAM,iBAAkB,MAC3ByE,GAAcoB,iBAAiBJ,GAC/BnL,GAAemL,EAAkBD,MAAMlL,IAEvCZ,GACG0L,OACAvF,WAAWhG,EAAuB,MAClCmG,MAAM,iBAAkB,MACxBA,MAAM,eAAgB,MACtB4D,SACH,IAAMkC,EAAyCxP,MAC/CwP,EAAO3D,GAAG,OAAQ4D,IAAS5D,GAAG,MAAO6D,IACrC,IAAMC,EAAoBvM,GACvB4L,QACApD,OAAO,KACPzC,QAAQ,QAAQ,GACnBwG,EACG9D,GAAG,aAAa,SAASvN,EAAGe,GAE3B8O,GAAcyB,mBAAmB5P,IAAU4E,UAE5CiH,GAAG,YAAY,SAASvN,EAAGe,GAC1B8O,GAAc0B,kBAAkB7P,IAAU4E,UAE3CiH,GAAG,QAASiE,IACZjE,GAAG,WAAYkE,IACf3D,KAAKoD,GACRG,EAAkB/D,OAAO,QAAQzC,QAAQ,cAAc,GACvDwG,EAAkB/D,OAAO,QAAQzC,QAAQ,aAAa,GACtDgF,GAAc6B,iBAAiBL,GAC/BvM,GAAeuM,EAAkBT,MAAM9L,IAEvCe,GACG2K,OACAvF,WAAWhG,EAAuB,MAClCmG,MAAM,eAAgB,MACtB4D,SACH,IAAM2C,EAAoB9L,GACvB6K,QACApD,OAAO,QACPzC,QAAQ,QAAQ,GAChBO,MAAM,eAAgB,MACzByE,GAAc+B,iBAAiBD,GAC/B9L,GAAe8L,EAAkBf,MAAM/K,IAEvCmK,GHjUK,SAAiC9P,EAAe4O,GACrD,IADoE,EAC9D+C,EAAoD,GADU,cAEjD3R,GAFiD,IAEpE,2BAA0B,CAAC,IAAhB+C,EAAe,QACxB,GAAIA,EAAKnC,MAAO,CACd,IAAMA,EAAQE,EAAkBiC,EAAKnC,OACrC+Q,EAAyB/Q,GAAS+Q,EAAyB/Q,IAAUmC,EACrE4O,EAAyB/Q,IACtB+Q,EAAyB/Q,KAAW+Q,EAAyB/Q,GAAOT,MAAQP,IAA4BmD,EAAK5C,MAAQP,GAClHmD,EACA4O,EAAyB/Q,GAC1B+Q,EAAyB/Q,GAAOT,OACnCwR,EAAyB/Q,GAAOT,KAAOF,EAAU0R,EAAyB/Q,OAXZ,kDAgBnCY,IAAQmQ,IAhB2B,IAgBpE,2BAAoE,CAAC,IAC/DC,EAAaD,EADiD,SAElE,GAAIC,EAAWzR,OAASP,EAAyB,CAC/C,IAD+C,EAC3CiS,EAAoC,KADO,cAG3BD,EAAW5R,OAHgB,IAG/C,2BAAuC,CAAC,IAAD,EAC/B8R,EAAoB,CAAE/O,KADS,QACIgP,sBAAuB,GAC1DC,EAAWF,EAAkB/O,KAAKT,KAFH,cAGjBsM,GAHiB,IAGrC,2BAA2B,CAAC,IAAjBqD,EAAgB,QACrBC,GAAiB,EACrB,GAAI7N,EAAU4N,EAAM9P,OAAQ6P,IAAa3N,EAAU4N,EAAMzP,YAAawP,GAAW,CAAC,IAAD,gBAC3DJ,EAAW5R,OADgD,IAC/E,2BAAuC,CAAC,IAA7BmS,EAA4B,QACrC,GAAI9N,EAAU4N,EAAMtP,OAAQwP,EAAM7P,OAAS+B,EAAU4N,EAAMvP,YAAayP,EAAM7P,MAAO,CACnF4P,GAAiB,EACjB,QAJ2E,oCAO1E,GAAI7N,EAAU4N,EAAMtP,OAAQqP,IAAa3N,EAAU4N,EAAMvP,YAAasP,GAAW,CAAC,IAAD,gBAClEJ,EAAW5R,OADuD,IACtF,2BAAuC,CAAC,IAA7BmS,EAA4B,QACrC,GAAI9N,EAAU4N,EAAM9P,OAAQgQ,EAAM7P,OAAS+B,EAAU4N,EAAMzP,YAAa2P,EAAM7P,MAAO,CACnF4P,GAAiB,EACjB,QAJkF,+BAQpFA,GACFJ,EAAkBC,yBArBe,gCAwBhCF,GAAqCC,EAAkBC,sBAAwBF,EAAkCE,yBACpHF,EAAoCC,IA5BO,8BA+B/CF,EAAaC,EAAmC9O,OAjDgB,8BAoDpE,OAAO4O,EG6Qe5M,CAA8B/E,EAAO4O,IAE3Df,GAAW7N,MAAMA,GAAOqN,GAAG,QAAQ,WACjC,IADuC,EACjC+E,EAAQvE,GAAWuE,QADc,cAIvBpS,GAJuB,IAIvC,2BAAuB,CAAC,IAAbF,EAAY,QACrB,GAAIA,EAAEc,MAAO,CACX,IAAMyR,EAAcvC,GAAoB/K,EAAwBjF,EAAEc,QAClE,GAAIyR,IAAgBvS,EAAG,CACrBuS,EAAYnR,EAAImR,EAAYnR,GAAK,EACjCmR,EAAYlR,EAAIkR,EAAYlR,GAAK,EACjCrB,EAAEoB,EAAIpB,EAAEoB,GAAK,EACbpB,EAAEqB,EAAIrB,EAAEqB,GAAK,EACb,IAAMmR,EAAKxS,EAAEoB,EAAImR,EAAYnR,EACvBqR,EAAKzS,EAAEqB,EAAIkR,EAAYlR,EACvB8D,EAAI1E,KAAKC,KAAK8R,EAAKA,EAAKC,EAAKA,GAC7BtL,EAAyB,EAArBlC,EAAgBjF,GAASiF,EAAgBsN,GACnD,GAAIpN,IAAMgC,EAAG,CAEX,IAAMuL,GAAmB,GAAMjS,KAAK8G,IAAI+K,EAAQ,EAAG,GAAK,IAAOA,EAAQ,GAAK,GAEtEtL,GADK7B,EAAIgC,GACAhC,EACTwN,GAAM,EAAI3L,GAAKuL,EAAYnR,EAAI4F,EAAIhH,EAAEoB,EACrCwR,GAAM,EAAI5L,GAAKuL,EAAYlR,EAAI2F,EAAIhH,EAAEqB,EACrCwR,EAAK7S,EAAEoB,EAAIuR,EACXG,EAAK9S,EAAEqB,EAAIuR,EACjB5S,EAAEoB,GAAKpB,EAAEoB,GAAK,GAAU,IAALyR,EAAYH,EAC/B1S,EAAEqB,GAAKrB,EAAEqB,GAAK,GAAU,IAALyR,EAAYJ,EAC/B,IAAMK,GAAO,EAAI/L,GAAKhH,EAAEoB,EAAI4F,EAAIuL,EAAYnR,EACtC4R,GAAO,EAAIhM,GAAKhH,EAAEqB,EAAI2F,EAAIuL,EAAYlR,EACtC4R,EAAMV,EAAYnR,EAAI2R,EACtBG,EAAMX,EAAYlR,EAAI2R,EAC5BT,EAAYnR,GAAW,IAAN6R,EAAaP,EAC9BH,EAAYlR,GAAW,IAAN6R,EAAaR,MAhCC,8BAsCvCpC,KAEAC,KAEAzL,GAAaoG,KAAK,aAAa,SAAClL,GAG9B,OAFAA,EAAEoB,EAAI+R,MAAMnT,EAAEoB,IAAe,IAARpB,EAAEoB,EAAUwL,GAAe,EAAI5M,EAAEoB,EACtDpB,EAAEqB,EAAI8R,MAAMnT,EAAEqB,IAAe,IAARrB,EAAEqB,EAAU8L,GAAgB,EAAInN,EAAEqB,EAChD,aAAerB,EAAEoB,EAAI,IAAMpB,EAAEqB,EAAI,UAG5C0M,GAAWC,MAAgC,QAASc,MAAMA,IHpHrD,SAA4Bf,GACjCA,EACGuE,MAAM,GACNc,SAAS,KACTC,WAAW,KACXC,YAAY,GGgHfrO,CAAyB8I,IACrBmC,GACFnC,GAAWwF,UAEXxF,GAAWyF,OAIf,IAAIC,IAA0B,EAE9B,SAAStC,GAAQnR,EAAS0T,EAAU7S,GAC9BqP,IACGuD,KACH1F,GAAWuF,YAAY,KAAMC,UAC7BE,IAA0B,GAE5BzT,EAAE2T,GAAKjS,IAASN,EAChBpB,EAAE4T,GAAKlS,IAASL,IAEhBrB,EAAEoB,EAAIM,IAASN,EACfpB,EAAEqB,EAAIK,IAASL,EACfK,IAAUb,EAAE6S,IAAMxI,KAAK,YAAa,aAAelL,EAAEoB,EAAI,IAAMpB,EAAEqB,EAAI,KACrEiP,KACAC,MAIJ,SAASa,GAAUpR,GACbkQ,MACGxO,IAASmS,QAAUJ,KACtBA,IAA0B,EAC1B1F,GAAWuF,YAAY,IAEzBtT,EAAE2T,GAAK,KACP3T,EAAE4T,GAAK,MAIX,SAASpG,KAEP3I,GAAmB,GACnB4K,IAAsB,EACtBnF,IAAoB,GAGtB,SAASkH,GAAYxR,GACnByP,IAAsB,EAGtB,IAAMqE,EAAqB7O,EAAgBJ,IAAkB,SAACuK,GAAD,OAC3DnK,EAAgBA,EAA0BmK,GAAKnK,EAA0BjF,OAEvE8T,GAAsB,EAExBjP,GAAiBkP,OAAOD,EAAoB,IAG5CjP,GAAiB1D,KAAKnB,GACtBgR,GAAgBhR,IAElBsK,GAAoBuF,GAAcvF,qBAAuBzF,GAAiBd,OAAS,GACnFrC,IAASsS,kBAGX,SAASvC,GAAezR,GAClBA,EAAEE,MAEJoP,GAAatP,GACJA,EAAEwC,MAAQxC,EAAEc,OAqEzB,SAAsBd,GAEpB,IADA,IAAMiU,EAAqB,CAAEnT,MAAOd,EAAEc,MAAOZ,MAAO,GAAIkB,EAAGpB,EAAEoB,EAAGC,EAAGrB,EAAEqB,EAAG6S,cAAe,IAD1D,cAG3B,IAAMC,EAAQjU,EAAMmQ,GACpB,GAAIpL,EAAoBkP,EAAOnU,GAAI,CAEjCE,EAAM6T,OAAO1D,EAAG,GAChB4D,EAAa/T,MAAOiB,KAAKgT,GAHQ,oBAKbrF,IALa,IAKjC,2BAA2B,CAAC,IAAjBsF,EAAgB,UAEtBnP,EAAgBmP,EAAMvR,OAAQsR,EAAM3R,OAAUyC,EAAsBmP,EAAMvR,SAAWoC,EAAgBmP,EAAMvR,OAAOL,KAAM2R,EAAM3R,QAC7H4R,EAAMxR,aAAgBqC,EAAsBmP,EAAMxR,cAAgBqC,EAAgBmP,EAAMxR,YAAY9B,MAAOqT,EAAM3R,QAEnH4R,EAAMxR,YAAcwR,EAAMvR,OAC1BuR,EAAMvR,OAAS7C,EAAEc,OAAS,MAGzBmE,EAAgBmP,EAAM/R,OAAQ8R,EAAM3R,OAAUyC,EAAsBmP,EAAM/R,SAAW4C,EAAgBmP,EAAM/R,OAAOG,KAAM2R,EAAM3R,QAC7H4R,EAAM1R,aAAgBuC,EAAsBmP,EAAM1R,cAAgBuC,EAAgBmP,EAAM1R,YAAY5B,MAAOqT,EAAM3R,QAEnH4R,EAAM1R,YAAc0R,EAAM/R,OAC1B+R,EAAM/R,OAASrC,EAAEc,OAAS,KAlBG,8BAqBjCuP,IAGA,IAAMyD,EAAqB7O,EAAgBJ,IAAkB,SAACuK,GAAD,OAC3DnK,EAAgBA,EAA0BmK,GAAKnK,EAA0BkP,OAEvEL,GAAsB,GAExBjP,GAAiBkP,OAAOD,EAAoB,GAjCrB,KAEpBzD,EAAI,EAAGA,EAAInQ,EAAM6D,SAAUsM,EAAI,EAA/BA,GAoCT,IAAK,IAAIgE,EAAK,EAAGA,EAAKvF,GAAM/K,OAAQsQ,IAAM,CACxC,IAAMC,EAASxF,GAAMuF,GACjBpP,EAAgBqP,EAAOzR,OAAQ7C,EAAEc,QAAUmE,EAAgBqP,EAAOzR,OAAQyR,EAAOjS,UACnF4R,EAAaC,cAAe/S,KAAKmT,GACjCxF,GAAMiF,OAAOM,EAAI,GACjBA,KAGJnU,EAAMiB,KAAK8S,GAEXhF,KAnHEsF,CAAavU,GAIfyP,IAAsB,EACtBM,KAEArO,IAASsS,kBAGX,SAAS1E,GAAatP,GAAS,oBAEZA,EAAEE,OAFU,IAE7B,2BAA2B,CAAC,IAAjBsU,EAAgB,QACzBA,EAAGpT,EAAIpB,EAAEoB,GAAM,EAAIX,KAAKgU,WAAkC,IAArBxP,EAAgBjF,GAAWiF,EAAgBuP,KAAQ/T,KAAKgU,SAAW,IAAO,EAAI,GACnHD,EAAGnT,EAAIrB,EAAEqB,GAAM,EAAIZ,KAAKgU,WAAkC,IAArBxP,EAAgBjF,GAAWiF,EAAgBuP,KAAQ/T,KAAKgU,SAAW,IAAO,EAAI,IAJxF,kDAOZvU,GAPY,IAO7B,2BAAwB,CAAC,IAAdwU,EAAa,QACtB,GAAIA,EAAG5T,OAAS4T,EAAGxU,OAAS+E,EAAoByP,EAAI1U,GAAI,CACtDE,EAAM6T,OAAO7T,EAAMyP,QAAQ+E,GAAK,GAChC,QAVyB,8BAe7B,GAFAC,MAAMC,UAAUzT,KAAK0T,MAAM3U,EAAOF,EAAEE,OAEhCF,EAAEkU,cAAe,CAAC,IAAD,gBACElU,EAAEkU,eADJ,IACnB,2BAAsC,CAAC,IAA5BY,EAA2B,QACpCA,EAAOjS,OAASiS,EAAOlS,YACvBkS,EAAOzS,OAASyS,EAAOpS,aAHN,8BAKnBiS,MAAMC,UAAUzT,KAAK0T,MAAM/F,GAAO9O,EAAEkU,sBAC7BlU,EAAEkU,cArBkB,oBAwBJlU,EAAEE,OAxBE,IAwB7B,2BAAmC,CAAC,IAAD,EAAxB6U,EAAwB,sBACbjG,IADa,IACjC,2BAA2B,CAAC,IAAjBkG,EAAgB,QAEvBA,EAAMpS,cACLqC,EAAgB+P,EAAMpS,YAAamS,EAAWvS,OAC5CyC,EAAsB+P,EAAMpS,cAAgBqC,EAAgB+P,EAAMpS,YAAYJ,KAAMuS,EAAWvS,SAElGwS,EAAMnS,OAASmS,EAAMpS,mBACdoS,EAAMpS,aAGboS,EAAMtS,cACLuC,EAAgB+P,EAAMtS,YAAaqS,EAAWvS,OAC5CyC,EAAsB+P,EAAMtS,cAAgBuC,EAAgB+P,EAAMtS,YAAYF,KAAMuS,EAAWvS,SAElGwS,EAAM3S,OAAS2S,EAAMtS,mBACdsS,EAAMtS,cAhBgB,gCAxBN,8BA6C7BuM,KAGA,IAAM6E,EAAqB7O,EAAgBJ,IAAkB,SAACuK,GAAD,OAC3DnK,EAAgBA,EAA0BmK,GAAKnK,EAA0BjF,OAEvE8T,GAAsB,GAExBjP,GAAiBkP,OAAOD,EAAoB,GAuDhD,SAAS/D,KAEP,GADA/J,EAAgCnB,GAAiBoQ,KAAI,SAAApU,GAAC,OAAIoE,EAA0BpE,OACpD,IAA5BgE,GAAiBd,OACnB8L,GAAc6B,iBAAiB5M,IAC/B+K,GAAcoB,iBAAiBvL,IAC/BmK,GAAcc,yBAAyBV,IACvCJ,GAAc+B,iBAAiB/L,QAC1B,CACL,IAAMqP,EAAmBrQ,GACnB6K,EAAeE,EAA4BsF,EAAkBpQ,IAC7DqQ,EAAevF,EAA4BsF,EAAkBxP,GAAcmK,GAAcvF,qBACzF8K,EAAuBxF,EAAoCsF,EAAkBjF,GAAeJ,GAAcvF,qBAC1G+K,EF/eH,SACLxQ,EACAa,EACAN,GAEA,OAAOM,EAAaX,QAClB,SAAA2C,GAAC,OAGoB,IAFnBjC,EAAgBZ,EAAkBa,EAAcN,GAC7C0G,OACA6D,QAAQjI,MEseUkI,CAA8BsF,EAAkBxP,GAAcmK,GAAcvF,qBAC7FgL,EFneH,SACLzQ,EACAa,EACAN,GAEA,OAAOM,EAAaX,QAClB,SAAA2C,GAAC,OAGoB,IAFnB/B,EAAwBd,EAAkBa,EAAcN,GACrD0G,OACA6D,QAAQjI,ME0dkBkI,CAAsCsF,EAAkBjF,GAAeJ,GAAcvF,qBAC9GiL,EFxbH,SACL1Q,EACA2Q,EACA1Q,GAGA,IAFmD,EAE7C2Q,EAAuC,GACvCC,EAAyC7Q,EAAiBoQ,KAAI,SAAApU,GAAC,OAAIoE,EAAyBpE,MAH/C,cAIrB2U,GAJqB,yBAIxCG,EAJwC,QAK3CtQ,EAAwBJ,EAA+B0Q,GACvDrQ,EAAwBL,EAA+B0Q,GAE3DD,EAA6BE,MAAK,SAAAC,GAAG,OAAI5Q,EAAgB4Q,EAAKxQ,QAC7DqQ,EAA6BE,MAAK,SAAAC,GAAG,OAAI5Q,EAAgB4Q,EAAKvQ,MAG/DmQ,EAA2BtU,KAAKmE,IAE/BoQ,EAA6BE,MAAK,SAAAC,GAAG,OAAI5Q,EAAgB4Q,EAAKxQ,OAC/DqQ,EAA6BE,MAAK,SAAAC,GAAG,OAAI5Q,EAAgB4Q,EAAKvQ,OAG9DmQ,EAA2BtU,KAAKkE,IAdpC,2BAAiD,IAJE,8BA0BnD,OAJ8BP,EAAaC,QAAO,SAAClE,GACjD,IAAMiV,EAAc7Q,EAAyBpE,GAC7C,OAAO4U,EAA2B9F,QAAQmG,IAAgB,KE4ZnClG,CAA8BsF,EAAkBC,EAAarJ,OAAQhH,IACtFiR,EAAmCb,EAAiBc,OAAOT,EAAezJ,QAC1EmK,GF5iBRpR,EE4iBuDkR,GF3iBvDjR,EE2iByFA,IFziBrEC,QAClB,SAAA2C,GAAC,OAGoB,IAFnB9C,EAAgBC,EAAkBC,GAC/BgH,OACA6D,QAAQjI,OEsiBPwO,EAAetG,EAA4BsF,EAAkBrP,IAC7DsQ,GFvcRC,EEucuDF,EAAapK,QFtcpEjG,EEsc4EA,IFpcxDd,QAClB,SAAA2C,GAAC,OAGoB,IAFnB9B,EAAgBwQ,EAAkBvQ,GAC/BiG,OACA6D,QAAQjI,QEkce,IAAxB+H,GACFI,GAAcwG,gBAAgB3G,GAE9BG,GAAcyG,mBAAmB5G,GAGnCG,GAAc0G,8BAA8BhB,GAC5C1F,GAAc2G,uBAAuBP,GACrCpG,GAAc4G,mBAAmBtB,GACjCtF,GAAc6G,uBAAuBrB,GACrCxF,GAAc8G,2BAA2BvB,GACzCvF,GAAc+G,+BAA+BtB,GAC7CzF,GAAcgH,mBAAmBX,GACjCrG,GAAciH,uBAAuBX,GFvdlC,IACLC,EACAvQ,EAxGAhB,EACAC,EEikBF,SAASkM,GAAgBzN,GACvB,IAAMwT,EAAoBrV,IAAU,aAC9B8B,EAAQyB,EAAyB1B,GACjCyT,EAAS/R,EAAoB1B,GAAuC,GAAzBA,EAAWyT,OAAS,GACrED,EAAkBhI,OAAO,UAAUzD,KAAK9H,GACxCuT,EAAkBhI,OAAO,UAAUzD,KAAK0L,GAExC,IAAMC,EAAeF,EAAkBhI,OAAO,UAC9CgI,EACGhI,OAAO,UACPhE,UAAU,MACViE,SAEH,IAAMkI,EAAY3T,EAAW2T,WAAa,GAG1C,GAFAH,EAAkBhI,OAAO,cAAczD,KAAK4L,GAExC3T,EAAW4T,QAAS,CAEtB,IAAMC,EAAY1V,IAAW6B,EAAW4T,SACxCF,EACGlM,UAAU,MACVe,KAAKsL,GACL1G,QACApD,OAAO,MACPvC,UAAU,MACVe,MAAK,SAACuL,GAAD,OAAsC3V,IAAU2V,MACrD3G,QACApD,OAAO,MACPhC,MAAK,SAACtL,GAAD,OAAeA,UACbiF,EAAoB1B,IAAeA,EAAWzC,OAASyC,EAAWrD,OAE5E+W,EACGlM,UAAU,MACVe,KAAKvI,EAAWrD,OAChBwQ,QACApD,OAAO,MACPvC,UAAU,MACVe,MAAK,SAACuL,GAAD,MAAe,CAACA,EAAI7U,SACzBkO,QACApD,OAAO,MACPhC,MAAK,SAACtL,GAAD,OAAeA,KAErB0B,KACFA,IAASsS,kBGtpBN,SAASsD,GAAgBC,GAE9B,OAoDF,SAA2BC,EAAoBD,GAC7C,IAD4E,EACtEE,EAAgBD,EAAWE,MAAM,KADqC,cAEjDD,GAFiD,IAE5E,2BAA0C,CAAC,IACnCE,EADkC,QACJD,MAAM,KAE1C,GAAIC,EAAe,KAAOJ,EACxB,YAA6BnV,IAAtBuV,EAAe,GAAmB,KAAOA,EAAe,IANS,8BAS5E,OAAO,KA7DAC,CADUC,mBAAmB/K,OAAOgL,SAASC,OAAOC,UAAU,IAClCT,GAG9B,SAASU,GAAgBV,EAAgBW,GAC9C,IAIMC,EAAe,IAwDvB,SAA4BX,EAAoBY,GAC9C,IAD6G,EACvGX,EAAgBD,EAAWzT,OAAS,EAAIyT,EAAWE,MAAM,KAAO,GADuC,cAErFU,GAFqF,IAE7G,2BAAoC,CAElC,IAFmC,IAA1BC,EAAyB,QAC9BC,GAAmB,EACdvX,EAAI,EAAGA,EAAI0W,EAAc1T,OAAQhD,IAAK,CACtB0W,EAAc1W,GAAG2W,MAAM,KAE3B,KAAOW,EAAUd,SAClCE,EAAc1W,GAAKsX,EAAUd,OAAS,KAAOc,EAAUH,QAAU,IACjEI,GAAmB,IAGE,IAArBA,GACFb,EAActW,KAAKkX,EAAUd,OAAS,KAAOc,EAAUH,QAAU,MAbwC,8BAgB7G,OAAOT,EAAcc,KAAK,KA1EFC,CAFPX,mBAAmB/K,OAAOgL,SAASC,OAAOC,UAAU,IAEhB,CAAC,CAAET,SAAQW,YAGhEpL,OAAO2L,QAAQC,UAAU,GAAI,GAAIP,GCInC,IAGaQ,GAAb,kDACE,WAAYC,GAAY,IAAD,sBACrB,cAAMA,GAEN,IAAItO,EAA4E,MAAtDgN,GAPW,cAQ/BuB,EDPH,SAAgCtB,GACrC,IAAMuB,EAAgBxB,GAAgBC,GACtC,OAAsB,OAAlBuB,EACK,GAELA,EAAc/U,OAAS,EACf+U,EAAcd,UAAU,EAAGc,EAAc/U,OAAS,GACtC2T,MATU,OASiBzC,KAAI,SAAA3G,GAAC,OACpDA,EACGvL,QAAQ,SAAU,KAClBA,QAAQ,QAAS,KACjBA,QAAQ,UAAW,KACnBA,QAAQ,aAAc,QAItB,GCTwBgW,CAPK,WAGb,OAKjBzO,GAAuD,IAAhCuO,EAAqB9U,SAC9CkU,GAVmC,aAUe,IAClD3N,GAAsB,GAGxB,EAAK0O,MAAQ,CACXC,mBAAoB,GACpBzO,eAAe,EACfF,sBACAuO,uBACAK,kBAAkB,EAClBhJ,oBAAoB,GAGtB,EAAKiJ,yBAA2B,EAAKA,yBAAyB3S,KAA9B,gBAChC,EAAK4S,oBAAsB,EAAKA,oBAAoB5S,KAAzB,gBAC3B,EAAK6S,0BAA4B,EAAKA,0BAA0B7S,KAA/B,gBACjC,EAAK8S,8BAAgC,EAAKA,8BAA8B9S,KAAnC,gBACrC,EAAK+S,oBAAsB,EAAKA,oBAAoB/S,KAAzB,gBAC3B,EAAKgT,yBAA2B,EAAKA,yBAAyBhT,KAA9B,gBAChC,EAAKiT,uBAAyB,EAAKA,uBAAuBjT,KAA5B,gBAC9B,EAAKkT,yBAA2B,EAAKA,yBAAyBlT,KAA9B,gBAChC,EAAKmT,0BAA4B,EAAKA,0BAA0BnT,KAA/B,gBA3BZ,EADzB,gEAgCIoT,GAAatT,KAAKgT,8BAA+BhT,KAAK0S,MAAMH,qBAAsBvS,KAAK0S,MAAM1O,uBAhCjG,+BAoCI,OACE,2BACE,uBAAKR,UAAU,cACb,sBAAIA,UAAU,SAAd,4BACA,uBAAKA,UAAU,oBACb,yBAAOA,UAAWxD,KAAK0S,MAAM1O,oBAAsB,WAAa,IAAhE,UACA,yBACE9H,KAAK,cACLmH,KAAK,OACLkQ,SAAUvT,KAAK6S,yBACfW,MAAOxT,KAAK0S,MAAMC,mBAClBc,SAAUzT,KAAK0S,MAAM1O,sBAEvB,0BAAQ2D,GAAG,eAAe+L,QAAS1T,KAAKqT,0BAA2BI,SAAUzT,KAAK0S,MAAM1O,qBAAxF,aAGA,yBACE2D,GAAG,sBACHtE,KAAK,WACLsQ,QAAS3T,KAAK0S,MAAMxO,cACpBqP,SAAUvT,KAAK8S,oBACfW,SAAUzT,KAAK0S,MAAM1O,sBAEvB,yBAAO4P,QAAQ,uBAAf,mBACA,yBACEjM,GAAG,4BACHtE,KAAK,WACLsQ,QAAS3T,KAAK0S,MAAM1O,oBACpBuP,SAAUvT,KAAK+S,0BACfU,SAAqD,IAA3CzT,KAAK0S,MAAMH,qBAAqB9U,SAE5C,yBAAOmW,QAAQ,6BAAf,yBACA,yBAAOjM,GAAG,yBAAyBtE,KAAK,WAAWsQ,QAAS3T,KAAK0S,MAAME,iBAAkBW,SAAUvT,KAAKmT,yBACxG,yBAAOS,QAAQ,0BAAf,qBACA,yBAAOjM,GAAG,2BAA2BtE,KAAK,WAAWsQ,QAAS3T,KAAK0S,MAAM9I,mBAAoB2J,SAAUvT,KAAKoT,2BAC5G,yBAAOQ,QAAQ,4BAAf,WAIJ,uBAAKpQ,UAAU,WACb,uBAAKmE,GAAG,UAAUnE,UAAWxD,KAAK0S,MAAME,iBAAmB,WAAa,KACxE,uBAAKjL,GAAG,YACN,sBAAInE,UAAU,UACd,uBAAKA,UAAU,UACf,yBAAOA,UAAU,UACjB,uBAAKA,UAAU,mBAjF3B,0CAwF8BU,GJxBvB,IAAuBsF,EIyB1BxJ,KAAK6T,SAAS,CAAE3P,kBJzBUsF,EI0BJtF,EJzBxBqF,GAAcrF,cAAgBsF,EAC9BC,OIlEF,+CA6FmCqK,GAC/B9T,KAAK6T,SAAS,CAAElB,mBAAoBmB,IACpCR,GAAuBQ,KA/F3B,oDAkGwCvB,GACpCvS,KAAK6T,SAAS,CAAEtB,yBDlFb,SAAgCtB,EAAgB8C,GACrD,IAAInC,EAAS,GACTmC,EAAYtW,OAAS,IACvBmU,EACE,IACAmC,EACGpF,KAAI,SAAA3G,GAAC,OACJA,EACGvL,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,gBAElBwV,KAlC2B,OAmC9B,KAEJN,GAAgBV,EAAQW,GCmEtBoC,CAtGkC,UAsGoBzB,GAClB,IAAhCA,EAAqB9U,QAAgBuC,KAAK0S,MAAM1O,sBAClDhE,KAAK6T,SAAS,CAAE7P,qBAAqB,IACrC2N,GA1GmC,aA0Ge,OAvGxD,kDA4GI2B,GAAuBtT,KAAK0S,MAAMC,sBA5GtC,+CA+GmCsB,GAC/B,IAAMC,EAASD,EAAME,cAAcX,MACnCxT,KAAKkT,yBAAyBgB,GAC9BD,EAAMG,mBAlHV,0CAqH8BH,GAC1B,IAAMC,EAASD,EAAME,cAAcR,QACnC3T,KAAKiT,oBAAoBiB,KAvH7B,gDA0HoCD,GAChC,IAAMC,EAASD,EAAME,cAAcR,QACnC3T,KAAK6T,SAAS,CAAE7P,oBAAqBkQ,IACrCvC,GAhIqC,aAgIauC,EAAS,IAAM,IACjEZ,GAA4BY,IACb,IAAXA,IAAgD,IAA7BlU,KAAK0S,MAAMxO,eAChClE,KAAKiT,qBAAoB,KAhI/B,6CAoIiCgB,GAC7B,IJ3D6BI,EI2DvBH,EAASD,EAAME,cAAcR,QACnC3T,KAAK6T,SAAS,CAAEjB,iBAAkBsB,IJ5DLG,EI6DJH,EJ5D3B3K,GAActF,mBAAqBoQ,EACnC5K,OI5EF,+CA0ImCwK,GAC/B,IAAMC,EAASD,EAAME,cAAcR,QACnC3T,KAAK6T,SAAS,CAAEjK,mBAAoBsK,IJ5DtCtK,GI6DgCsK,EJ5DhCvL,SIjFF,GAAyB2L,aCNLC,QACW,cAA7B/N,OAAOgL,SAASgD,UAEe,UAA7BhO,OAAOgL,SAASgD,UAEhBhO,OAAOgL,SAASgD,SAASC,MAAM,2DCZnCC,IAASC,OAAO,kBAAC,GAAD,MAASjO,SAASC,eAAe,SDoH3C,kBAAmBiO,WACrBA,UAAUC,cAAcC,MAAMzM,MAAK,SAAA0M,GACjCA,EAAaC,kB","file":"static/js/main.96910ebd.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport { Link, Node, Hull } from '../data-interfaces';\n\nexport const nodeRadiusSizes = { default: 3, node: 3, group: 7 };\nexport const hullOffset = 15;\nexport const nodeStateNormal = 'node-state-normal';\nexport const nodeStateHovered = 'node-state-hover';\n\nexport function defaultNodeSuperformulaType(d: Node): string {\n  let shapeType = 'circle';\n  if (d.nodes) {\n    shapeType = 'circle'; // \"octagon\";\n  }\n  return shapeType;\n}\n\nexport function defaultNodeSuperformulaSize(d: Node): number {\n  return 2 * getRadius(d);\n}\n\n// Transform the list of nodes into groups\nexport function getBiggestNodesPerGroup(nodes: Node[], links: Link[]) {\n  const groupedDictionaryOfNodes: { [key: string]: Node } = {};\n  for (const node of nodes) {\n    if (node.group) {\n      const group = strToLowerOrEmpty(node.group);\n      groupedDictionaryOfNodes[group] = groupedDictionaryOfNodes[group] || node;\n      groupedDictionaryOfNodes[group] =\n        !groupedDictionaryOfNodes[group] || (groupedDictionaryOfNodes[group].size || nodeRadiusSizes.default) < (node.size || nodeRadiusSizes.default)\n          ? node\n          : groupedDictionaryOfNodes[group];\n      if (!groupedDictionaryOfNodes[group].size) {\n        groupedDictionaryOfNodes[group].size = getRadius(groupedDictionaryOfNodes[group]);\n      }\n    }\n  }\n\n  for (const groupedDicPropName of d3.keys(groupedDictionaryOfNodes)) {\n    let groupedDic = groupedDictionaryOfNodes[groupedDicPropName];\n    if (groupedDic.size === nodeRadiusSizes.default) {\n      let nodeWithMostNumberOfInternalLinks = null;\n      // If the biggest node is the default size, ensure the biggest node is the one with the most \"internal\" links\n      for (const jNode of groupedDic.nodes!) {\n        const nodeWithLinkCount = { node: jNode, numberOfInternalLinks: 0 };\n        const nodeName = nodeWithLinkCount.node.name;\n        for (const kLink of links) {\n          let isInternalLink = false;\n          if (strEquals(kLink.source, nodeName) || strEquals(kLink.sourceChild, nodeName)) {\n            for (const lNode of groupedDic.nodes!) {\n              if (strEquals(kLink.target, lNode.name) || strEquals(kLink.targetChild, lNode.name)) {\n                isInternalLink = true;\n                break;\n              }\n            }\n          } else if (strEquals(kLink.target, nodeName) || strEquals(kLink.targetChild, nodeName)) {\n            for (const lNode of groupedDic.nodes!) {\n              if (strEquals(kLink.source, lNode.name) || strEquals(kLink.sourceChild, lNode.name)) {\n                isInternalLink = true;\n                break;\n              }\n            }\n          }\n          if (isInternalLink) {\n            nodeWithLinkCount.numberOfInternalLinks++;\n          }\n        }\n        if (!nodeWithMostNumberOfInternalLinks || nodeWithLinkCount.numberOfInternalLinks > nodeWithMostNumberOfInternalLinks.numberOfInternalLinks) {\n          nodeWithMostNumberOfInternalLinks = nodeWithLinkCount;\n        }\n      }\n      groupedDic = nodeWithMostNumberOfInternalLinks!.node;\n    }\n  }\n  return groupedDictionaryOfNodes;\n}\n\nexport function getRadius(d: Node): number {\n  let resultRadius = nodeRadiusSizes.node;\n  if (d.size) {\n    resultRadius = d.size;\n  } else if (d.nodes) {\n    resultRadius = nodeRadiusSizes.group;\n    let biggestSize = d.nodes[0].size || nodeRadiusSizes.default;\n    for (const iNode of d.nodes) {\n      biggestSize = (iNode.size || nodeRadiusSizes.default) > biggestSize ? iNode.size || nodeRadiusSizes.default : biggestSize;\n    }\n    resultRadius = biggestSize > resultRadius ? biggestSize : resultRadius;\n  }\n  return resultRadius;\n}\n\nexport function getHighlightedRadius(d: Node): number {\n  const resultRadius = getRadius(d) + Math.sqrt(getRadius(d));\n  return resultRadius;\n}\n\n// For Hulls\nexport function convexHulls(nodes: Node[]): Hull[] {\n  const hulls: { [key: string]: Array<[number, number]> } = {};\n\n  // create point sets\n  for (const n of nodes) {\n    if (n.nodes || !n.group) {\n      continue;\n    }\n    const i: string = strToLowerOrEmpty(n.group);\n    if (!hulls.hasOwnProperty(i)) {\n      hulls[i] = [];\n    }\n    const offsetAndRadius = hullOffset + getRadius(n) + Math.sqrt(getRadius(n));\n    hulls[i].push([(n.x || 0) - offsetAndRadius, (n.y || 0) - offsetAndRadius]);\n    hulls[i].push([(n.x || 0) - offsetAndRadius, (n.y || 0) + offsetAndRadius]);\n    hulls[i].push([(n.x || 0) + offsetAndRadius, (n.y || 0) - offsetAndRadius]);\n    hulls[i].push([(n.x || 0) + offsetAndRadius, (n.y || 0) + offsetAndRadius]);\n  }\n\n  // create convex hulls\n  const hullset: Hull[] = [];\n  for (const i of Object.keys(hulls)) {\n    const newHull = d3.polygonHull(hulls[i]);\n    if (newHull) {\n      hullset.push({ group: i, path: newHull });\n    }\n  }\n\n  return hullset;\n}\n\nexport function drawCluster(d: { path: Array<[number, number]> }): string | null {\n  const curve = d3.line().curve(d3.curveCardinalClosed.tension(0.85));\n  const clusterPath = curve(d.path);\n  return clusterPath; // 0.8\n}\n\nexport function getGroup(n: Node): string | null {\n  return n.group || null;\n}\n// End For Hulls\n\n// Reusable transition\nexport function transitionLinear(duration: number): d3.Transition<d3.BaseType, any, any, any> {\n  return d3\n    .transition()\n    .duration(duration)\n    .ease(d3.easeLinear) as any;\n}\n\nexport function isNodeNotString(x: Node | string): x is Node {\n  return typeof x !== 'string';\n}\n\nexport function isLinkNotNode(x: Node | Link): x is Link {\n  return (x as Link).source !== undefined;\n}\n\nexport function getNodeId(d: Node | string): string {\n  let nodeId: string = '';\n  if (isNodeNotString(d)) {\n    if (d.name && d.group) {\n      nodeId = d.group + '-' + d.name;\n    } else if (d.name) {\n      nodeId = d.name;\n    } else if (d.group) {\n      nodeId = d.group;\n    }\n  } else {\n    nodeId = d;\n  }\n  return nodeId;\n}\n\nfunction getLinkSourceName(d: Link): string {\n  if (d.sourceChild) {\n    if (isNodeNotString(d.sourceChild)) {\n      return d.sourceChild.name!;\n    } else {\n      return d.sourceChild;\n    }\n  } else {\n    if (isNodeNotString(d.source)) {\n      return d.source.name!;\n    } else {\n      return d.source;\n    }\n  }\n}\n\nfunction getLinkTargetName(d: Link): string {\n  if (d.targetChild) {\n    if (isNodeNotString(d.targetChild)) {\n      return d.targetChild.name!;\n    } else {\n      return d.targetChild;\n    }\n  } else {\n    if (isNodeNotString(d.target)) {\n      return d.target.name!;\n    } else {\n      return d.target;\n    }\n  }\n}\n\nexport function getLinkGradientId(d: Link) {\n  const gradientId: string = 'linkGrad-' + getLinkSourceName(d) + getLinkTargetName(d);\n  return gradientId\n    .replace(/ /g, '_')\n    .replace(/\\(|\\)/g, '__')\n    .replace(/[^A-Za-z\\w\\-\\:\\.]/g, '___');\n}\n\n// The Node Name or Group is used to identify the node\nexport function getNodeNameOrGroup(node: Node): string {\n  return node.name || node.group || '';\n}\n\nexport function getNodeNameAndGroup(node: Node): string {\n  return (node.group || '') + '-' + (node.name || '');\n}\n\nexport function getLinkSourceNameOrGroup(link: Link): string {\n  return typeof link.source === 'string' ? link.source : getNodeNameOrGroup(link.source);\n}\n\nexport function getLinkTargetNameOrGroup(link: Link): string {\n  return typeof link.target === 'string' ? link.target : getNodeNameOrGroup(link.target);\n}\n\n// The title can be used to identify the node or link\nexport function getNodeOrLinkTitle(nodeOrLink: Node | Link): string {\n  let title = '';\n  if (isLinkNotNode(nodeOrLink)) {\n    const sourceName = getLinkSourceNameOrGroup(nodeOrLink);\n    const targetName = getLinkTargetNameOrGroup(nodeOrLink);\n    title = 'Link: ' + sourceName + ' - ' + targetName;\n  } else {\n    title = getNodeNameOrGroup(nodeOrLink);\n  }\n  return title;\n}\n\nexport function doGroupsMatch(node1: Node, node2: Node): boolean {\n  return node1 && node2 && node1.group != null && node2.group != null && strToLowerOrEmpty(node1.group) === strToLowerOrEmpty(node2.group);\n}\n\nexport function findIndex(arr: any[], callback: (arg: any) => boolean): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function nodeTextShiftRight(d: Node, multiplier?: number) {\n  const shiftRight = (getRadius(d) + 1) * (multiplier || 1.5);\n  return 'translate(' + shiftRight + ',0)';\n}\n\nexport function nodeTextOpacity(d: Node, showAllLabels: boolean): number {\n  let opacity = 0;\n  if (getRadius(d) >= 10 || showAllLabels) {\n    opacity = 1;\n  }\n  return opacity;\n}\n\nexport function darkenIfInvertedBackground(color: string, isInverted: boolean): string {\n  return isInverted\n    ? d3\n        .hsl(color)\n        .darker(2)\n        .toString()\n    : color;\n}\n\nexport function setSimulationAlpha(simulation: d3.Simulation<Node, Link>) {\n  simulation\n    .alpha(1)\n    .alphaMin(0.01)\n    .alphaDecay(0.02)\n    .alphaTarget(0);\n}\n\n/**\n * Safe, flexible string equals, case insensitive\n */\nexport function strEquals(val1: any | undefined, val2: any | undefined) {\n  return val1 != null && val2 != null && typeof val1 === 'string' && typeof val2 === 'string' && val1.toLowerCase() === val2.toLowerCase();\n}\n\nexport function strToLowerOrEmpty(val: string | undefined | null): string {\n  return val && val != null ? val.toLowerCase() : '';\n}\n","import * as d3 from 'd3';\nimport { Link, Node, Hull } from '../data-interfaces';\nimport * as utils from './utils';\n\n// Search for nodes using given text (this is not an exact match)\nexport function SearchNodes(\n  searchText: string,\n  nodeElements: d3.Selection<SVGGElement, Node, d3.BaseType, any>\n): d3.Selection<SVGGElement, Node, d3.BaseType, any> {\n  const matchedNodes = nodeElements.filter((d: Node) => {\n    const title = utils.getNodeOrLinkTitle(d);\n    if (title.length > 0) {\n      return title.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;\n    }\n    return false;\n  });\n  return matchedNodes;\n}\n\n// Get the nodes matching those highlighted\nexport function GetMatchedNodes(\n  highlightedNodes: Node[],\n  nodeElements: d3.Selection<SVGGElement, Node, d3.BaseType, any>\n): d3.Selection<SVGGElement, Node, d3.BaseType, any> {\n  const unmatchedNodes = nodeElements.filter((d: Node) => {\n    const nodeNameOrGroup = utils.getNodeNameOrGroup(d);\n    if (nodeNameOrGroup.length > 0) {\n      for (const highlightedNode of highlightedNodes) {\n        const highlightedNodeNameOrGroup = utils.getNodeNameOrGroup(highlightedNode);\n        if (utils.strEquals(nodeNameOrGroup, highlightedNodeNameOrGroup)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  });\n  return unmatchedNodes;\n}\n\n// Get the nodes not matching those highlighted\nexport function GetUnmatchedNodes(\n  highlightedNodes: Node[],\n  nodeElements: d3.Selection<SVGGElement, Node, d3.BaseType, any>\n): d3.Selection<SVGGElement, Node, d3.BaseType, any> {\n  return nodeElements.filter(\n    a =>\n      GetMatchedNodes(highlightedNodes, nodeElements)\n        .data()\n        .indexOf(a) === -1\n  );\n}\n\nfunction DoesLinkMatch(highlightedNodes: Node[], l: Link, onlyLinksWithHighlightedSourceAndTarget: boolean): boolean {\n  const linkSourceNameOrGroup = utils.getLinkSourceNameOrGroup(l);\n  const linkTargetNameOrGroup = utils.getLinkTargetNameOrGroup(l);\n  let highlightedSourceFound = false;\n  let highlightedTargetFound = false;\n  // Either the source of the target must be a highlighted node\n  for (const highlightedNode of highlightedNodes) {\n    const nodeNameOrGroup = utils.getNodeNameOrGroup(highlightedNode);\n    if (onlyLinksWithHighlightedSourceAndTarget === true) {\n      if (utils.strEquals(nodeNameOrGroup, linkSourceNameOrGroup)) {\n        highlightedSourceFound = true;\n      }\n      if (utils.strEquals(nodeNameOrGroup, linkTargetNameOrGroup)) {\n        highlightedTargetFound = true;\n      }\n    } else if (utils.strEquals(nodeNameOrGroup, linkSourceNameOrGroup) || utils.strEquals(nodeNameOrGroup, linkTargetNameOrGroup)) {\n      return true;\n    }\n  }\n  return highlightedSourceFound && highlightedTargetFound;\n}\n\n// Get the links to the highlighted nodes\nexport function GetMatchedLinks(\n  highlightedNodes: Node[],\n  linkElements: d3.Selection<SVGLineElement, Link, d3.BaseType, any>,\n  onlyLinksWithHighlightedSourceAndTarget: boolean\n): d3.Selection<SVGLineElement, Link, d3.BaseType, any> {\n  const matchedLinks = linkElements.filter((l: Link) => {\n    return DoesLinkMatch(highlightedNodes, l, onlyLinksWithHighlightedSourceAndTarget);\n  });\n  return matchedLinks;\n}\n\nexport function GetMatchedLinkGradients(\n  highlightedNodes: Node[],\n  linkElements: d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any>,\n  onlyLinksWithHighlightedSourceAndTarget: boolean\n): d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any> {\n  const matchedLinks = linkElements.filter((l: Link) => {\n    return DoesLinkMatch(highlightedNodes, l, onlyLinksWithHighlightedSourceAndTarget);\n  });\n  return matchedLinks;\n}\n\n// Get the links with no direct connection to the highlighted nodes\nexport function GetUnmatchedLinks(\n  highlightedNodes: Node[],\n  linkElements: d3.Selection<SVGLineElement, Link, d3.BaseType, any>,\n  onlyLinksWithHighlightedSourceAndTarget: boolean\n): d3.Selection<SVGLineElement, Link, d3.BaseType, any> {\n  return linkElements.filter(\n    a =>\n      GetMatchedLinks(highlightedNodes, linkElements, onlyLinksWithHighlightedSourceAndTarget)\n        .data()\n        .indexOf(a) === -1\n  );\n}\n\nexport function GetUnmatchedLinkGradients(\n  highlightedNodes: Node[],\n  linkElements: d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any>,\n  onlyLinksWithHighlightedSourceAndTarget: boolean\n): d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any> {\n  return linkElements.filter(\n    a =>\n      GetMatchedLinkGradients(highlightedNodes, linkElements, onlyLinksWithHighlightedSourceAndTarget)\n        .data()\n        .indexOf(a) === -1\n  );\n}\n\n// Get the hulls with highlighted nodes inside\nexport function GetMatchedHulls(\n  highlightedNodes: Node[],\n  hullElements: d3.Selection<SVGPathElement, Hull, d3.BaseType, any>\n): d3.Selection<SVGPathElement, Hull, d3.BaseType, any> {\n  const matchedHulls = hullElements.filter((h: Hull) => {\n    if (h.group.length > 0) {\n      for (const highlightedNode of highlightedNodes) {\n        if (utils.strEquals(h.group, highlightedNode.group)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  });\n  return matchedHulls;\n}\n\n// Get the hulls with highlighted nodes inside\nexport function GetUnmatchedHulls(\n  highlightedHulls: Hull[],\n  hullElements: d3.Selection<SVGPathElement, Hull, d3.BaseType, any>\n): d3.Selection<SVGPathElement, Hull, d3.BaseType, any> {\n  return hullElements.filter(\n    a =>\n      GetMatchedHulls(highlightedHulls, hullElements)\n        .data()\n        .indexOf(a) === -1\n  );\n}\n\nexport function GetNeighbourNodes(\n  highlightedNodes: Node[],\n  highlightedLinks: Link[],\n  nodeElements: d3.Selection<SVGGElement, Node, d3.BaseType, any>\n): d3.Selection<SVGGElement, Node, d3.BaseType, any> {\n  // get list of nodes that are neighbours to the highlighted nodes\n  const nodeNeighbourNamesOrGroups: string[] = [];\n  const highlightedNodeNamesOrGroups: string[] = highlightedNodes.map(n => utils.getNodeNameOrGroup(n));\n  for (const highlightedLink of highlightedLinks) {\n    const linkSourceNameOrGroup = utils.getLinkSourceNameOrGroup(highlightedLink);\n    const linkTargetNameOrGroup = utils.getLinkTargetNameOrGroup(highlightedLink);\n    if (\n      highlightedNodeNamesOrGroups.some(nog => utils.strEquals(nog, linkSourceNameOrGroup)) &&\n      !highlightedNodeNamesOrGroups.some(nog => utils.strEquals(nog, linkTargetNameOrGroup))\n    ) {\n      // the target node is a neighbour\n      nodeNeighbourNamesOrGroups.push(linkTargetNameOrGroup);\n    } else if (\n      !highlightedNodeNamesOrGroups.some(nog => utils.strEquals(nog, linkSourceNameOrGroup)) &&\n      highlightedNodeNamesOrGroups.some(nog => utils.strEquals(nog, linkTargetNameOrGroup))\n    ) {\n      // the source node is a neighbour\n      nodeNeighbourNamesOrGroups.push(linkSourceNameOrGroup);\n    }\n  }\n  // now that we have a list of nodes that are neighbours, filter by them\n  const neighbourNodeElements = nodeElements.filter((n: Node) => {\n    const nameOrGroup = utils.getNodeNameOrGroup(n);\n    return nodeNeighbourNamesOrGroups.indexOf(nameOrGroup) > -1;\n  });\n  return neighbourNodeElements;\n}\n","// Modified from source https://github.com/d3/d3-plugins/blob/master/superformula/superformula.js\nimport * as d3 from 'd3';\nimport { Node } from '../data-interfaces';\n\nconst sLine = d3.line();\n\nclass Superformula {\n  private sType: (d: Node) => string;\n  private sSize: (d: Node) => number;\n  private sSegments: number;\n\n  constructor() {\n    // defaults\n    this.sType = d => 'circle';\n    this.sSize = d => 1;\n    this.sSegments = 360;\n\n    this.getPath = this.getPath.bind(this);\n  }\n\n  public type(f: (d: Node) => string) {\n    this.sType = f;\n    return this;\n  }\n  public size(f: (d: Node) => number) {\n    this.sSize = f;\n    return this;\n  }\n  public segments(d: number) {\n    this.sSegments = d;\n    return this;\n  }\n\n  public getPath(d: Node, sizeMultiplier?: number): string {\n    let sType: SuperformulaTypeObject;\n    const typeKey = this.sType(d);\n    sType = SuperformulaTypes[typeKey];\n    return this._superformulaPath(sType, this.sSegments, this.sSize(d) * (sizeMultiplier || 1));\n  }\n\n  public allTypes(): string[] {\n    return d3.keys(SuperformulaTypes);\n  }\n\n  private _superformulaPath(params: SuperformulaTypeObject, n: number, diameter: number): string {\n    let i: number = -1;\n    const dt: number = (2 * Math.PI) / n;\n    let t: number;\n    let r: number = 0;\n    let x: number;\n    let y: number;\n    const ts: number[] = [];\n    const points: Array<[number, number]> = [];\n\n    while (++i < n) {\n      t = (params.m * (i * dt - Math.PI)) / 4;\n      t = Math.pow(\n        Math.abs(Math.pow(Math.abs(Math.cos(t) / params.a), params.n2) + Math.pow(Math.abs(Math.sin(t) / params.b), params.n3)),\n        -1 / params.n1\n      );\n      if (t > r) {\n        r = t;\n      }\n      ts.push(t);\n    }\n\n    r = (diameter * Math.SQRT1_2) / r;\n    i = -1;\n    while (++i < n) {\n      x = (t = ts[i] * r) * Math.cos(i * dt);\n      y = t * Math.sin(i * dt);\n      points.push([Math.abs(x) < 1e-6 ? 0 : x, Math.abs(y) < 1e-6 ? 0 : y]);\n    }\n\n    return sLine(points) + 'Z';\n  }\n}\n\ninterface SuperformulaTypeObject {\n  m: number;\n  n1: number;\n  n2: number;\n  n3: number;\n  a: number;\n  b: number;\n}\n\ninterface SuperformulaTypes {\n  asterisk: SuperformulaTypeObject;\n  bean: SuperformulaTypeObject;\n  butterfly: SuperformulaTypeObject;\n  circle: SuperformulaTypeObject;\n  clover: SuperformulaTypeObject;\n  cloverFour: SuperformulaTypeObject;\n  cross: SuperformulaTypeObject;\n  diamond: SuperformulaTypeObject;\n  drop: SuperformulaTypeObject;\n  ellipse: SuperformulaTypeObject;\n  gear: SuperformulaTypeObject;\n  heart: SuperformulaTypeObject;\n  heptagon: SuperformulaTypeObject;\n  octagon: SuperformulaTypeObject;\n  hexagon: SuperformulaTypeObject;\n  malteseCross: SuperformulaTypeObject;\n  pentagon: SuperformulaTypeObject;\n  rectangle: SuperformulaTypeObject;\n  roundedStar: SuperformulaTypeObject;\n  square: SuperformulaTypeObject;\n  star: SuperformulaTypeObject;\n  triangle: SuperformulaTypeObject;\n  [key: string]: SuperformulaTypeObject;\n}\n\nconst SuperformulaTypes: SuperformulaTypes = {\n  asterisk: { m: 12, n1: 0.3, n2: 0, n3: 10, a: 1, b: 1 },\n  bean: { m: 2, n1: 1, n2: 4, n3: 8, a: 1, b: 1 },\n  butterfly: { m: 3, n1: 1, n2: 6, n3: 2, a: 0.6, b: 1 },\n  circle: { m: 4, n1: 2, n2: 2, n3: 2, a: 1, b: 1 },\n  clover: { m: 6, n1: 0.3, n2: 0, n3: 10, a: 1, b: 1 },\n  cloverFour: { m: 8, n1: 10, n2: -1, n3: -8, a: 1, b: 1 },\n  cross: { m: 8, n1: 1.3, n2: 0.01, n3: 8, a: 1, b: 1 },\n  diamond: { m: 4, n1: 1, n2: 1, n3: 1, a: 1, b: 1 },\n  drop: { m: 1, n1: 0.5, n2: 0.5, n3: 0.5, a: 1, b: 1 },\n  ellipse: { m: 4, n1: 2, n2: 2, n3: 2, a: 9, b: 6 },\n  gear: { m: 19, n1: 100, n2: 50, n3: 50, a: 1, b: 1 },\n  heart: { m: 1, n1: 0.8, n2: 1, n3: -8, a: 1, b: 0.18 },\n  heptagon: { m: 7, n1: 1000, n2: 400, n3: 400, a: 1, b: 1 },\n  octagon: { m: 8, n1: 1000, n2: 300, n3: 300, a: 1, b: 1 },\n  hexagon: { m: 6, n1: 1000, n2: 400, n3: 400, a: 1, b: 1 },\n  malteseCross: { m: 8, n1: 0.9, n2: 0.1, n3: 100, a: 1, b: 1 },\n  pentagon: { m: 5, n1: 1000, n2: 600, n3: 600, a: 1, b: 1 },\n  rectangle: { m: 4, n1: 100, n2: 100, n3: 100, a: 2, b: 1 },\n  roundedStar: { m: 5, n1: 2, n2: 7, n3: 7, a: 1, b: 1 },\n  square: { m: 4, n1: 100, n2: 100, n3: 100, a: 1, b: 1 },\n  star: { m: 6, n1: 90, n2: 100, n3: 100, a: 1, b: 1 },\n  triangle: { m: 3, n1: 100, n2: 200, n3: 200, a: 1, b: 1 },\n};\n\nexport { Superformula, SuperformulaTypes };\n","import * as d3 from 'd3';\nimport * as utils from './utils/utils';\nimport * as searchUtils from './utils/search-matching';\nimport { Link, Node, Hull } from './data-interfaces';\nimport Tooltip from './utils/tooltip';\nimport { DiagramStyles } from './diagram-styles';\n\nexport function load(\n  highlightedNodesChangedCallbackArg: (highlightedNodeNames: string[]) => void,\n  initialHighlightedNodeNames: string[],\n  initiallyShowOnlyHighlighted: boolean\n) {\n  highlightedNodesChangedCallback = highlightedNodesChangedCallbackArg;\n\n  prepare();\n\n  // Show a loading message\n  d3.select('#diagram')\n    .append('h3')\n    .classed('loading-info', true)\n    .html(\"Loading. This shouldn't take more than a few seconds...\");\n\n  // Load the data\n  const dataUrl: string = process.env.REACT_APP_DATA_SERVICES_URL!;\n  d3.json(dataUrl).then((uResponse: unknown) => {\n    const response = uResponse as { nodes?: Node[]; links?: Link[] };\n    nodes = response.nodes!;\n    links = response.links!;\n\n    // Remove the loading message\n    d3.select('#diagram')\n      .select('.loading-info')\n      .remove();\n\n    // Start nodes in the middle\n    for (const d of nodes) {\n      d.x = diagramWidth / 2;\n      d.y = diagramHeight / 2;\n    }\n\n    // Show the data\n    updateSimulation();\n\n    // Highlight nodes\n    if (initialHighlightedNodeNames.length > 0) {\n      for (const highlightedNodeName of initialHighlightedNodeNames) {\n        // check if node is already selected\n        const nodeIdx = utils.findIndex(nodes, (hn: Node) => utils.strEquals(utils.getNodeNameAndGroup(hn), highlightedNodeName));\n        if (nodeIdx > -1) {\n          // highlight it\n          highlightedNodes.push(nodes[nodeIdx]);\n        } else {\n          // search for node next level down\n          for (const hn of nodes) {\n            if (hn.nodes) {\n              for (const cn of hn.nodes) {\n                if (utils.strEquals(utils.getNodeNameAndGroup(cn), highlightedNodeName)) {\n                  highlightedNodes.push(cn);\n                  ungroupNodes(hn);\n                }\n              }\n            }\n          }\n        }\n      }\n      showOnlyHighlighted(initiallyShowOnlyHighlighted);\n    }\n  });\n}\n\nexport function searchForNodes(searchText: string) {\n  if (searchText === '') {\n    highlightedNodes = [];\n    hasSearchedForNodes = false;\n  } else {\n    const matchedNodes = searchUtils.SearchNodes(searchText, nodeElements);\n    highlightedNodes = matchedNodes.data();\n    hasSearchedForNodes = true;\n  }\n  showOnlyHighlighted(diagramStyles.showOnlyHighlighted && highlightedNodes.length > 0);\n}\n\nexport function showAllLabels(show: boolean) {\n  diagramStyles.showAllLabels = show;\n  highlightNodes();\n}\n\nexport function showOnlyHighlighted(show: boolean) {\n  diagramStyles.showOnlyHighlighted = show;\n  highlightNodes();\n}\n\nexport function invertBackground(invert: boolean) {\n  diagramStyles.invertedBackground = invert;\n  highlightNodes();\n}\n\nexport function setHasForceSimulation(dropForce: boolean) {\n  hasForceSimulation = dropForce;\n  updateSimulation();\n}\n\nlet highlightedNodesChangedCallback: (highlightedNodeNames: string[]) => void;\n\nlet nodes: Node[];\nlet highlightedNodes: Node[] = [];\nlet links: Link[];\nlet biggestNodePerGroup: { [key: string]: Node };\n\nlet diagramWidth: number;\nlet diagramHeight: number;\nconst nodePadding = 1.5;\nconst clusterPadding = 6;\nconst rainbow = d3.interpolateRainbow;\n\nlet nodeElements: d3.Selection<SVGGElement, Node, d3.BaseType, any>;\nlet linkElements: d3.Selection<SVGLineElement, Link, d3.BaseType, any>;\nlet linkGradients: d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any>;\nlet hullElements: d3.Selection<SVGPathElement, Hull, d3.BaseType, any>;\n\nlet svg: d3.Selection<d3.BaseType, any, HTMLElement, any>;\nlet svgDefs: d3.Selection<d3.BaseType, any, HTMLElement, any>;\n\nlet hasSearchedForNodes: boolean = false;\nlet hasForceSimulation: boolean = true;\n\n// let tooltip: Tooltip; // Not currently used, but it works if needed\n\nconst diagramStyles = new DiagramStyles();\n\n// zooming\nlet zoom: d3.ZoomBehavior<Element, unknown>;\nfunction zoomed() {\n  svg.select('.links').attr('transform', d3.event.transform);\n  svg.select('.nodes').attr('transform', d3.event.transform);\n  svg.select('.hulls').attr('transform', d3.event.transform);\n  const zoomFactor: any = d3.event.transform.k;\n  d3.selectAll('.node-text').style('font-size', 14 * (1 / zoomFactor) + 'px');\n}\n// Force Simulation\nlet simulation: d3.Simulation<Node, Link> = d3.forceSimulation<Node, Link>();\n\nfunction prepare() {\n  diagramWidth = Math.floor(Number(window.getComputedStyle(document.getElementById('diagram')!).width!.replace('px', ''))) - 10;\n  diagramHeight = Math.floor(Number(window.getComputedStyle(document.getElementById('diagram')!).height!.replace('px', ''))) - 10;\n\n  svg = d3\n    .select('#diagram')\n    .append('svg')\n    .classed('graph-svg-diagram', true)\n    .attr('width', diagramWidth)\n    .attr('height', diagramHeight)\n    .on('click', onBackgroundDiagramClick) as any;\n\n  svgDefs = svg.append('defs') as any;\n\n  svg\n    .append('g') // first so it's not on top\n    .classed('hulls', true);\n\n  svg.append('g').classed('links', true);\n\n  svg\n    .append('g') // last so it's on top\n    .classed('nodes', true);\n\n  // tooltip = new Tooltip(d3.select('#diagram'));\n\n  // zooming\n  zoom = d3\n    .zoom()\n    .scaleExtent([0, 40])\n    .translateExtent([\n      [0 - diagramWidth, 0 - diagramHeight],\n      [diagramWidth * 2, diagramHeight * 2],\n    ])\n    .on('zoom', zoomed);\n\n  svg.call(zoom as any).on('dblclick.zoom', null); // disable double-click zoom\n\n  // Force Simulation\n  simulation = d3\n    .forceSimulation<Node, Link>()\n    .force(\n      'link',\n      d3\n        .forceLink()\n        .id((d: Node) => utils.getNodeNameOrGroup(d))\n        .distance((slDatum: d3.SimulationLinkDatum<{}>) => {\n          const l = slDatum as Link;\n          const n1 = l.source;\n          const n2 = l.target;\n          let d: number = utils.nodeRadiusSizes.default;\n          if (utils.isNodeNotString(n1) && utils.isNodeNotString(n2)) {\n            const combinedRadiuses: number = utils.getRadius(n1) + utils.getRadius(n2);\n            d = utils.doGroupsMatch(n1, n2) ? combinedRadiuses : combinedRadiuses * 7;\n          }\n          return d;\n        })\n        .strength((slDatum: d3.SimulationLinkDatum<{}>) => {\n          const l = slDatum as Link;\n          let s: number = 0.3;\n          if (typeof l.source !== 'string' && typeof l.target !== 'string') {\n            s = utils.doGroupsMatch(l.source, l.target) ? 0.01 : 0.5;\n          }\n          return s;\n        })\n    )\n    .force(\n      'collide',\n      d3.forceCollide().radius((d: Node) => utils.getRadius(d) + 20)\n    )\n    .force(\n      'charge',\n      d3\n        .forceManyBody()\n        .strength(-500)\n        .distanceMin(100)\n    )\n    .force('x', d3.forceX(diagramWidth / 2))\n    .force('y', d3.forceY(diagramHeight / 2));\n}\n\nfunction tickHulls() {\n  hullElements.data(utils.convexHulls(nodes)).attr('d', utils.drawCluster);\n}\n\nfunction tickLinks() {\n  linkElements\n    .attr('x1', (d: Link) => {\n      return utils.isNodeNotString(d.source) && d.source.x ? d.source.x : 0;\n    })\n    .attr('y1', (d: Link) => {\n      return utils.isNodeNotString(d.source) && d.source.y ? d.source.y : 0;\n    })\n    .attr('x2', (d: Link) => {\n      return utils.isNodeNotString(d.target) && d.target.x ? d.target.x : 0;\n    })\n    .attr('y2', (d: Link) => {\n      return utils.isNodeNotString(d.target) && d.target.y ? d.target.y : 0;\n    });\n  linkGradients\n    .attr('x1', (d: Link) => {\n      return utils.isNodeNotString(d.source) && d.source.x ? d.source.x : 0;\n    })\n    .attr('y1', (d: Link) => {\n      return utils.isNodeNotString(d.source) && d.source.y ? d.source.y : 0;\n    })\n    .attr('x2', (d: Link) => {\n      return utils.isNodeNotString(d.target) && d.target.x ? d.target.x : 0;\n    })\n    .attr('y2', (d: Link) => {\n      return utils.isNodeNotString(d.target) && d.target.y ? d.target.y : 0;\n    });\n}\n\nfunction updateSimulation() {\n  linkElements = svg\n    .select('.links')\n    .selectAll('line')\n    .data(links, utils.getLinkGradientId as any) as any;\n  linkGradients = svgDefs.selectAll('linearGradient').data(links, utils.getLinkGradientId as any) as any;\n\n  nodeElements = svg\n    .select('.nodes')\n    .selectAll('.node')\n    .data(nodes, utils.getNodeId as any) as any;\n\n  hullElements = svg\n    .select('.hulls')\n    .selectAll('path.hull')\n    .data(utils.convexHulls(nodes)) as any;\n\n  linkGradients.exit().remove();\n  const linkGradientsEnter = linkGradients.enter().append('linearGradient');\n  linkGradientsEnter.append('stop');\n  linkGradientsEnter.append('stop');\n  diagramStyles.applyLinkGradientDefault(linkGradientsEnter);\n  linkGradients = linkGradientsEnter.merge(linkGradients);\n\n  linkElements\n    .exit()\n    .transition(utils.transitionLinear(100))\n    .style('stroke-opacity', 1e-6)\n    .remove();\n  const linkEnterElements = linkElements.enter().append('line');\n  linkEnterElements\n    .on('mouseover', function(d, i) {\n      // note function (not lambda) is reqd for 'this'\n      diagramStyles.applyLinkMouseOver(d3.select(this));\n      // tooltip.Show(d3.select(this), 'a message');\n    })\n    .on('mouseout', function(d, i) {\n      diagramStyles.applyLinkMouseOut(d3.select(this));\n      // tooltip.Hide();\n    })\n    .on('click', PopulateInfoBox)\n    .style('stroke-opacity', 1e-6);\n  diagramStyles.applyLinkDefault(linkEnterElements);\n  linkElements = linkEnterElements.merge(linkElements);\n\n  nodeElements\n    .exit()\n    .transition(utils.transitionLinear(100))\n    .style('stroke-opacity', 1e-6)\n    .style('fill-opacity', 1e-6)\n    .remove();\n  const drager: d3.DragBehavior<any, any, any> = d3.drag();\n  drager.on('drag', dragged).on('end', dragended);\n  const nodeEnterElements = nodeElements\n    .enter()\n    .append('g')\n    .classed('node', true);\n  nodeEnterElements\n    .on('mouseover', function(d, i) {\n      // function (not lambda) is reqd for 'this'\n      diagramStyles.applyNodeMouseOver(d3.select(this));\n    })\n    .on('mouseout', function(d, i) {\n      diagramStyles.applyNodeMouseOut(d3.select(this));\n    })\n    .on('click', onNodeClick)\n    .on('dblclick', onNodeDblclick)\n    .call(drager);\n  nodeEnterElements.append('path').classed('node-shape', true);\n  nodeEnterElements.append('text').classed('node-text', true);\n  diagramStyles.applyNodeDefault(nodeEnterElements);\n  nodeElements = nodeEnterElements.merge(nodeElements);\n\n  hullElements\n    .exit()\n    .transition(utils.transitionLinear(100))\n    .style('fill-opacity', 1e-6)\n    .remove();\n  const hullEnterElements = hullElements\n    .enter()\n    .append('path')\n    .classed('hull', true)\n    .style('fill-opacity', 1e-6);\n  diagramStyles.applyHullDefault(hullEnterElements);\n  hullElements = hullEnterElements.merge(hullElements);\n\n  biggestNodePerGroup = utils.getBiggestNodesPerGroup(nodes, links);\n\n  simulation.nodes(nodes).on('tick', () => {\n    const alpha = simulation.alpha();\n\n    // Force the node groups to cluster\n    for (const d of nodes) {\n      if (d.group) {\n        const biggestNode = biggestNodePerGroup[utils.strToLowerOrEmpty(d.group)];\n        if (biggestNode !== d) {\n          biggestNode.x = biggestNode.x || 0;\n          biggestNode.y = biggestNode.y || 0;\n          d.x = d.x || 0;\n          d.y = d.y || 0;\n          const x1 = d.x - biggestNode.x;\n          const y1 = d.y - biggestNode.y;\n          const l = Math.sqrt(x1 * x1 + y1 * y1); // dist between node and biggest node\n          const r = utils.getRadius(d) * 2 + utils.getRadius(biggestNode); // ideal dist between node and biggest node\n          if (l !== r) {\n            // as decay falls from 1 to 0, set a mostly consistant multiplier with small peak\n            const alphaMultiplier = -0.9 * Math.pow(alpha - 1, 2) - 0.9 * (alpha - 1) + 0.7;\n            const l1 = l - r;\n            const t = l1 / l;\n            const xr = (1 - t) * biggestNode.x + t * d.x;\n            const yr = (1 - t) * biggestNode.y + t * d.y;\n            const xd = d.x - xr;\n            const yd = d.y - yr;\n            d.x = (d.x || 0) - xd * 0.49 * alphaMultiplier;\n            d.y = (d.y || 0) - yd * 0.49 * alphaMultiplier;\n            const bxr = (1 - t) * d.x + t * biggestNode.x;\n            const byr = (1 - t) * d.y + t * biggestNode.y;\n            const bxd = biggestNode.x - bxr;\n            const byd = biggestNode.y - byr;\n            biggestNode.x -= bxd * 0.49 * alphaMultiplier;\n            biggestNode.y -= byd * 0.49 * alphaMultiplier;\n          }\n        }\n      }\n    }\n\n    tickHulls();\n\n    tickLinks();\n\n    nodeElements.attr('transform', (d: Node) => {\n      d.x = isNaN(d.x!) || d.x === 0 ? diagramWidth / 2 : d.x!;\n      d.y = isNaN(d.y!) || d.y === 0 ? diagramHeight / 2 : d.y!;\n      return 'translate(' + d.x + ',' + d.y + ')';\n    });\n  });\n  simulation.force<d3.ForceLink<Node, Link>>('link')!.links(links);\n  utils.setSimulationAlpha(simulation);\n  if (hasForceSimulation) {\n    simulation.restart();\n  } else {\n    simulation.stop();\n  }\n}\n\nlet dragSimulationRestarted = false;\n\nfunction dragged(d: Node, idx: any, n: any) {\n  if (hasForceSimulation) {\n    if (!dragSimulationRestarted) {\n      simulation.alphaTarget(0.02).restart();\n      dragSimulationRestarted = true;\n    }\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n  } else {\n    d.x = d3.event.x;\n    d.y = d3.event.y;\n    d3.select(n[idx]).attr('transform', 'translate(' + d.x + ',' + d.y + ')');\n    tickHulls();\n    tickLinks();\n  }\n}\n\nfunction dragended(d: Node) {\n  if (hasForceSimulation) {\n    if (!d3.event.active && dragSimulationRestarted) {\n      dragSimulationRestarted = false;\n      simulation.alphaTarget(0);\n    }\n    d.fx = null;\n    d.fy = null;\n  }\n}\n\nfunction onBackgroundDiagramClick() {\n  // Clear any highlighted nodes\n  highlightedNodes = [];\n  hasSearchedForNodes = false;\n  showOnlyHighlighted(false);\n}\n\nfunction onNodeClick(d: Node) {\n  hasSearchedForNodes = false;\n\n  // check if node is already selected\n  const highlightedNodeIdx = utils.findIndex(highlightedNodes, (hn: Node) =>\n    utils.strEquals(utils.getNodeNameAndGroup(hn), utils.getNodeNameAndGroup(d))\n  );\n  if (highlightedNodeIdx > -1) {\n    // then remove node\n    highlightedNodes.splice(highlightedNodeIdx, 1);\n  } else {\n    // highlight it\n    highlightedNodes.push(d);\n    PopulateInfoBox(d);\n  }\n  showOnlyHighlighted(diagramStyles.showOnlyHighlighted && highlightedNodes.length > 0);\n  d3.event.stopPropagation();\n}\n\nfunction onNodeDblclick(d: Node) {\n  if (d.nodes) {\n    // A grouped node\n    ungroupNodes(d);\n  } else if (d.name && d.group) {\n    // a single node\n    regroupNodes(d);\n  }\n\n  // Clear any highlighted nodes (animation time causes issues if it's before the grouping)\n  hasSearchedForNodes = false;\n  highlightNodes();\n\n  d3.event.stopPropagation();\n}\n\nfunction ungroupNodes(d: Node) {\n  // Set nodes to the coords of the parent (with random amount)\n  for (const k1 of d.nodes!) {\n    k1.x = d.x! + (1 + Math.random()) * (utils.getRadius(d) * 1.3 + utils.getRadius(k1)) * (Math.random() < 0.5 ? -1 : 1);\n    k1.y = d.y! + (1 + Math.random()) * (utils.getRadius(d) * 1.3 + utils.getRadius(k1)) * (Math.random() < 0.5 ? -1 : 1);\n  }\n  // Remove grouped node and bring child nodes up to main array\n  for (const k2 of nodes) {\n    if (k2.group && k2.nodes && utils.doGroupsMatch(k2, d)) {\n      nodes.splice(nodes.indexOf(k2), 1);\n      break;\n    }\n  }\n  Array.prototype.push.apply(nodes, d.nodes as any);\n  // Add internal links\n  if (d.internalLinks) {\n    for (const k3Link of d.internalLinks) {\n      k3Link.target = k3Link.targetChild!;\n      k3Link.source = k3Link.sourceChild!;\n    }\n    Array.prototype.push.apply(links, d.internalLinks);\n    delete d.internalLinks;\n  }\n  // Update links\n  for (const childMNode of d.nodes!) {\n    for (const lLink of links) {\n      if (\n        lLink.targetChild &&\n        (utils.strEquals(lLink.targetChild, childMNode.name) ||\n          (utils.isNodeNotString(lLink.targetChild) && utils.strEquals(lLink.targetChild.name, childMNode.name)))\n      ) {\n        lLink.target = lLink.targetChild;\n        delete lLink.targetChild;\n      }\n      if (\n        lLink.sourceChild &&\n        (utils.strEquals(lLink.sourceChild, childMNode.name) ||\n          (utils.isNodeNotString(lLink.sourceChild) && utils.strEquals(lLink.sourceChild.name, childMNode.name)))\n      ) {\n        lLink.source = lLink.sourceChild;\n        delete lLink.sourceChild;\n      }\n    }\n  }\n\n  updateSimulation();\n\n  // check if node is highlighted and remove\n  const highlightedNodeIdx = utils.findIndex(highlightedNodes, (hn: Node) =>\n    utils.strEquals(utils.getNodeNameAndGroup(hn), utils.getNodeNameAndGroup(d))\n  );\n  if (highlightedNodeIdx > -1) {\n    // then remove node\n    highlightedNodes.splice(highlightedNodeIdx, 1);\n  }\n}\n\nfunction regroupNodes(d: Node) {\n  const newNodeGroup: Node = { group: d.group, nodes: [], x: d.x, y: d.y, internalLinks: [] };\n  for (let k = 0; k < nodes.length; ++k) {\n    const kNode = nodes[k];\n    if (utils.doGroupsMatch(kNode, d)) {\n      // Group child nodes and remove from main array\n      nodes.splice(k, 1);\n      newNodeGroup.nodes!.push(kNode);\n      // Update links\n      for (const mLink of links) {\n        if (\n          (utils.strEquals(mLink.target, kNode.name) || (utils.isNodeNotString(mLink.target) && utils.strEquals(mLink.target.name, kNode.name))) &&\n          (!mLink.targetChild || (utils.isNodeNotString(mLink.targetChild) ? !utils.strEquals(mLink.targetChild.group, kNode.name) : true))\n        ) {\n          mLink.targetChild = mLink.target;\n          mLink.target = d.group || '';\n        }\n        if (\n          (utils.strEquals(mLink.source, kNode.name) || (utils.isNodeNotString(mLink.source) && utils.strEquals(mLink.source.name, kNode.name))) &&\n          (!mLink.sourceChild || (utils.isNodeNotString(mLink.sourceChild) ? !utils.strEquals(mLink.sourceChild.group, kNode.name) : true))\n        ) {\n          mLink.sourceChild = mLink.source;\n          mLink.source = d.group || '';\n        }\n      }\n      k--;\n\n      // check if node is highlighted and remove\n      const highlightedNodeIdx = utils.findIndex(highlightedNodes, (hn: Node) =>\n        utils.strEquals(utils.getNodeNameAndGroup(hn), utils.getNodeNameAndGroup(kNode))\n      );\n      if (highlightedNodeIdx > -1) {\n        // then remove node\n        highlightedNodes.splice(highlightedNodeIdx, 1);\n      }\n    }\n  }\n  // Pass through links again and get rid of internal links\n  for (let m1 = 0; m1 < links.length; m1++) {\n    const m1Link = links[m1];\n    if (utils.strEquals(m1Link.target, d.group) && utils.strEquals(m1Link.target, m1Link.source)) {\n      newNodeGroup.internalLinks!.push(m1Link);\n      links.splice(m1, 1);\n      m1--;\n    }\n  }\n  nodes.push(newNodeGroup);\n\n  updateSimulation();\n}\n\nfunction highlightNodes() {\n  highlightedNodesChangedCallback(highlightedNodes.map(n => utils.getNodeNameAndGroup(n)));\n  if (highlightedNodes.length === 0) {\n    diagramStyles.applyNodeDefault(nodeElements);\n    diagramStyles.applyLinkDefault(linkElements);\n    diagramStyles.applyLinkGradientDefault(linkGradients);\n    diagramStyles.applyHullDefault(hullElements);\n  } else {\n    const matchedNodesData = highlightedNodes;\n    const matchedNodes = searchUtils.GetMatchedNodes(matchedNodesData, nodeElements);\n    const matchedLinks = searchUtils.GetMatchedLinks(matchedNodesData, linkElements, diagramStyles.showOnlyHighlighted);\n    const matchedLinkGradients = searchUtils.GetMatchedLinkGradients(matchedNodesData, linkGradients, diagramStyles.showOnlyHighlighted);\n    const unmatchedLinks = searchUtils.GetUnmatchedLinks(matchedNodesData, linkElements, diagramStyles.showOnlyHighlighted);\n    const unmatchedLinkGradients = searchUtils.GetUnmatchedLinkGradients(matchedNodesData, linkGradients, diagramStyles.showOnlyHighlighted);\n    const neighbourNodes = searchUtils.GetNeighbourNodes(matchedNodesData, matchedLinks.data(), nodeElements);\n    const highlightedAndNeighbourNodesData = matchedNodesData.concat(neighbourNodes.data());\n    const unmatchedNodes = searchUtils.GetUnmatchedNodes(highlightedAndNeighbourNodesData, nodeElements);\n    const matchedHulls = searchUtils.GetMatchedHulls(matchedNodesData, hullElements);\n    const unmatchedHulls = searchUtils.GetUnmatchedHulls(matchedHulls.data(), hullElements);\n\n    if (hasSearchedForNodes === true) {\n      diagramStyles.applyNodeSearch(matchedNodes);\n    } else {\n      diagramStyles.applyNodeHighlight(matchedNodes);\n    }\n\n    diagramStyles.applyNodeHighlightedNeighbour(neighbourNodes);\n    diagramStyles.applyNodeUnhighlighted(unmatchedNodes);\n    diagramStyles.applyLinkHighlight(matchedLinks);\n    diagramStyles.applyLinkUnhighlighted(unmatchedLinks);\n    diagramStyles.applyLinkGradientHighlight(matchedLinkGradients);\n    diagramStyles.applyLinkGradientUnhighlighted(unmatchedLinkGradients);\n    diagramStyles.applyHullHighlight(matchedHulls);\n    diagramStyles.applyHullUnhighlighted(unmatchedHulls);\n  }\n}\n\n// Info Box\nfunction PopulateInfoBox(nodeOrLink: Node | Link) {\n  const divServiceDetails = d3.select('#info-box');\n  const title = utils.getNodeOrLinkTitle(nodeOrLink);\n  const notes = !utils.isLinkNotNode(nodeOrLink) ? nodeOrLink.notes || '' : '';\n  divServiceDetails.select('.title').text(title);\n  divServiceDetails.select('.notes').text(notes);\n\n  const tableElement = divServiceDetails.select('.table');\n  divServiceDetails\n    .select('.table')\n    .selectAll('tr')\n    .remove();\n\n  const timestamp = nodeOrLink.timestamp || '';\n  divServiceDetails.select('.timestamp').text(timestamp);\n\n  if (nodeOrLink.details) {\n    // node or link\n    const tableData = d3.entries(nodeOrLink.details);\n    tableElement\n      .selectAll('tr')\n      .data(tableData)\n      .enter()\n      .append('tr')\n      .selectAll('tr')\n      .data((row: { key: string; value: any }) => d3.values(row))\n      .enter()\n      .append('td')\n      .text((d: string) => d);\n  } else if (!utils.isLinkNotNode(nodeOrLink) && nodeOrLink.group && nodeOrLink.nodes) {\n    // group\n    tableElement\n      .selectAll('tr')\n      .data(nodeOrLink.nodes)\n      .enter()\n      .append('tr')\n      .selectAll('td')\n      .data((row: Node) => [row.name!])\n      .enter()\n      .append('td')\n      .text((d: string) => d);\n  }\n  if (d3.event) {\n    d3.event.stopPropagation();\n  }\n}\n","import * as d3 from 'd3';\nimport { schemeDark2 } from 'd3-scale-chromatic';\n\nexport const colorScale = d3.scaleOrdinal(schemeDark2.slice());\nexport const defaultNodeStrokeWidth = 1.5;\nexport const defaultLinkStrokeWidth = 1.5;\nexport const highlightColor = '#32f272';\nexport const everythingElseColor = '#31d8ea';\nexport const everythingElseOpacity = 0.2;\nexport const linkGradientColorStart = '#006eff';\nexport const linkGradientColorEnd = '#87eeff';\nexport const linkGradientColorEndInverted = '#2f5359';\n","import * as d3 from 'd3';\nimport * as utils from './utils/utils';\nimport { Superformula, SuperformulaTypes } from './utils/superformula';\nimport * as constants from './constants';\nimport { Link, Node, Hull, NodeStateProperties } from './data-interfaces';\nimport { BaseType } from 'd3';\n\nconst durationSecond: number = 1000;\nconst durationLong: number = 400;\nconst durationMediumLong: number = 250;\nconst durationMedium: number = 200;\nconst durationShort: number = 100;\n\nconst defaultSupaDupaPath = new Superformula()\n  .type(utils.defaultNodeSuperformulaType)\n  .size(utils.defaultNodeSuperformulaSize)\n  .segments(360);\n\nconst nodeStateDefault: NodeStateProperties = {\n  className: 'node-state-default',\n  nodeTextShiftMultiplier: 1.5,\n  shapeSuperformula: defaultSupaDupaPath,\n};\nconst nodeStateHighlight: NodeStateProperties = {\n  className: 'node-state-highlight',\n  nodeTextShiftMultiplier: 1.8,\n  shapeSuperformula: new Superformula().type(utils.defaultNodeSuperformulaType).size(d => {\n    return 1.5 * utils.getHighlightedRadius(d);\n  }),\n};\nconst nodeStateSearch: NodeStateProperties = {\n  className: 'node-state-search',\n  nodeTextShiftMultiplier: 1.8,\n  shapeSuperformula: new Superformula()\n    .type(() => 'gear')\n    .size(d => {\n      return 2 * utils.getHighlightedRadius(d);\n    }),\n};\nconst nodeStateHighlightNeighbour: NodeStateProperties = {\n  className: 'node-state-highlight-neighbour',\n  nodeTextShiftMultiplier: 1.8,\n  shapeSuperformula: defaultSupaDupaPath,\n};\nconst nodeStateUnhighlighted: NodeStateProperties = {\n  className: 'node-state-unhighlighted',\n  nodeTextShiftMultiplier: 1.6,\n  shapeSuperformula: defaultSupaDupaPath,\n};\n\nexport class DiagramStyles {\n  public showOnlyHighlighted: boolean = false;\n  public invertedBackground: boolean = false;\n  public showAllLabels: boolean = false;\n  private mouseOverLock: any = {};\n  private mouseOutLock: any = {};\n\n  public applyNodeDefault(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n    clearStates(nodeEles);\n    nodeEles.classed(nodeStateDefault.className, true);\n    const nodeShape = nodeEles.selectAll('.node-shape');\n    const nodeText = nodeEles.selectAll('.node-text');\n    nodeShape\n      .transition(utils.transitionLinear(durationSecond))\n      .attr('d', (d: unknown) => nodeStateDefault.shapeSuperformula.getPath(d as Node))\n      .attr('stroke-width', (d: unknown) => 1)\n      .attr('stroke', (d: unknown) => constants.colorScale(utils.strToLowerOrEmpty((d as Node).group)))\n      .attr('fill', (d: unknown) => constants.colorScale(utils.strToLowerOrEmpty((d as Node).group)))\n      .style('stroke-opacity', 1)\n      .style('fill-opacity', 1);\n    nodeText\n      .style('opacity', (d: unknown) => utils.nodeTextOpacity(d as Node, this.showAllLabels))\n      .attr('text-anchor', 'right')\n      .attr('dominant-baseline', 'central')\n      .attr('transform', (d: unknown) => utils.nodeTextShiftRight(d as Node))\n      .text((d: unknown) => (d as Node).name || (d as Node).group || '');\n  }\n\n  public applyNodeSearch(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n    clearStates(nodeEles);\n    nodeEles.classed(nodeStateSearch.className, true);\n    const nodeShape = nodeEles.selectAll('.node-shape');\n    const nodeText = nodeEles.selectAll('.node-text');\n    const bigSuperdupaPath = new Superformula().type(() => 'gear');\n    nodeShape\n      .transition()\n      .duration(durationMediumLong)\n      .attr('d', (d: unknown) =>\n        bigSuperdupaPath\n          .size(bd => {\n            return 5 * utils.getHighlightedRadius(bd);\n          })\n          .getPath(d as Node)\n      )\n      .attr('stroke', (d: unknown) => constants.highlightColor)\n      .attr('fill', (d: unknown) => constants.highlightColor)\n      .style('stroke-opacity', 1)\n      .style('fill-opacity', 1)\n      .transition()\n      .duration(durationMedium)\n      .attr('d', (d: unknown) => nodeStateSearch.shapeSuperformula.getPath(d as Node));\n    nodeText\n      .transition()\n      .duration(durationLong)\n      .style('opacity', 1)\n      .attr('transform', (d: unknown) => {\n        return utils.nodeTextShiftRight(d as Node, nodeStateSearch.nodeTextShiftMultiplier);\n      });\n  }\n\n  public applyNodeHighlight(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n    clearStates(nodeEles);\n    nodeEles.classed(nodeStateHighlight.className, true);\n    const nodeShape = nodeEles.selectAll('.node-shape');\n    const nodeText = nodeEles.selectAll('.node-text');\n    nodeShape\n      .transition()\n      .duration(durationMedium)\n      .attr('d', (d: unknown) => nodeStateHighlight.shapeSuperformula.getPath(d as Node))\n      .attr('stroke', () => utils.darkenIfInvertedBackground(constants.highlightColor, this.invertedBackground))\n      .attr('fill', () => utils.darkenIfInvertedBackground(constants.highlightColor, this.invertedBackground))\n      .style('stroke-opacity', 1)\n      .style('fill-opacity', 1);\n    nodeText\n      .transition()\n      .duration(durationLong)\n      .style('opacity', 1)\n      .attr('transform', (d: unknown) => {\n        return utils.nodeTextShiftRight(d as Node, nodeStateHighlight.nodeTextShiftMultiplier);\n      });\n  }\n\n  public applyNodeHighlightedNeighbour(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n    clearStates(nodeEles);\n    nodeEles.classed(nodeStateHighlightNeighbour.className, true);\n    const nodeShape = nodeEles.selectAll('.node-shape');\n    const nodeText = nodeEles.selectAll('.node-text');\n    nodeShape\n      .transition()\n      .duration(durationLong)\n      .attr('d', (d: unknown) => nodeStateHighlightNeighbour.shapeSuperformula.getPath(d as Node))\n      .attr('stroke', () => utils.darkenIfInvertedBackground(constants.everythingElseColor, this.invertedBackground))\n      .attr('fill', () => utils.darkenIfInvertedBackground(constants.everythingElseColor, this.invertedBackground))\n      .style('stroke-opacity', 1)\n      .style('fill-opacity', 1);\n    nodeText\n      .transition()\n      .duration(durationLong)\n      .style('opacity', 1);\n  }\n\n  public applyNodeUnhighlighted(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n    clearStates(nodeEles);\n    nodeEles.classed(nodeStateUnhighlighted.className, true);\n    const nodeShape = nodeEles.selectAll('.node-shape');\n    const nodeText = nodeEles.selectAll('.node-text');\n    nodeShape\n      .transition()\n      .duration(durationLong)\n      .attr('d', (d: unknown) => nodeStateUnhighlighted.shapeSuperformula.getPath(d as Node))\n      .attr('stroke', () => utils.darkenIfInvertedBackground(constants.everythingElseColor, this.invertedBackground))\n      .attr('fill', () => utils.darkenIfInvertedBackground(constants.everythingElseColor, this.invertedBackground))\n      .style('stroke-opacity', this.showOnlyHighlighted ? 0 : constants.everythingElseOpacity)\n      .style('fill-opacity', this.showOnlyHighlighted ? 0 : constants.everythingElseOpacity);\n    nodeText\n      .transition()\n      .duration(durationLong)\n      .style('opacity', () => (this.showOnlyHighlighted ? 0 : this.showAllLabels ? 1 : 0))\n      .attr('transform', d => {\n        return utils.nodeTextShiftRight(d as Node);\n      });\n  }\n\n  public applyNodeMouseOver(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n    const nodeState = getNodeStateProperties(nodeEles);\n    const nodeShape = nodeEles.selectAll('.node-shape');\n    const nodeText = nodeEles.selectAll('.node-text');\n    // A transition can already occur on a node, therefore using a custom tween\n    const mouseOverTransition = d3\n      .select(this.mouseOverLock)\n      .transition()\n      .duration(durationShort);\n    mouseOverTransition.tween('style:stroke-width', () => {\n      const i = d3.interpolateNumber(1, 10);\n      return (t: any) => {\n        nodeShape.style('stroke-width', i(t));\n      };\n    });\n    mouseOverTransition.tween('attr:transform', () => {\n      const nodeData = nodeEles.data()[0];\n      const shiftFrom = utils.nodeTextShiftRight(nodeData, nodeState.nodeTextShiftMultiplier);\n      const shiftTo = utils.nodeTextShiftRight(nodeData, nodeState.nodeTextShiftMultiplier * 1.3);\n      const i = d3.interpolateString(shiftFrom, shiftTo);\n      return (t: any) => {\n        nodeText.attr('transform', i(t));\n      };\n    });\n    if (this.showOnlyHighlighted === false && Number(nodeText.style('opacity')) < 1) {\n      nodeText.classed('temp-show', true);\n      mouseOverTransition.tween('style:opacity', () => {\n        const i = d3.interpolateNumber(Number(nodeText.style('opacity')), 1);\n        return (t: any) => {\n          nodeText.style('opacity', i(t));\n        };\n      });\n    }\n  }\n\n  public applyNodeMouseOut(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n    const nodeState = getNodeStateProperties(nodeEles);\n    const nodeShape = nodeEles.selectAll('.node-shape');\n    const nodeText = nodeEles.selectAll('.node-text');\n    // A transition can already occur on a node, therefore using a custom tween\n    const mouseOutTransition = d3\n      .select(this.mouseOutLock)\n      .transition()\n      .duration(durationShort);\n    mouseOutTransition.tween('style:stroke-width', () => {\n      const i = d3.interpolateNumber(10, 1);\n      return (t: any) => {\n        nodeShape.style('stroke-width', i(t));\n      };\n    });\n    mouseOutTransition.tween('attr:transform', () => {\n      const nodeData = nodeEles.data()[0];\n      const shiftTo = utils.nodeTextShiftRight(nodeData, nodeState.nodeTextShiftMultiplier);\n      const shiftFrom = utils.nodeTextShiftRight(nodeData, nodeState.nodeTextShiftMultiplier * 1.3);\n      const i = d3.interpolateString(shiftFrom, shiftTo);\n      return (t: any) => {\n        nodeText.attr('transform', i(t));\n      };\n    });\n    if (nodeText.classed('temp-show')) {\n      nodeText.classed('temp-show', false);\n      if (nodeState.className !== nodeStateHighlight.className) {\n        mouseOutTransition.tween('style:opacity', () => {\n          const i = d3.interpolateNumber(1, 0);\n          return (t: any) => {\n            nodeText.style('opacity', i(t));\n          };\n        });\n      }\n    }\n  }\n\n  public applyLinkDefault(linkEles: d3.Selection<SVGLineElement, Link, d3.BaseType, any>) {\n    linkEles\n      .attr('stroke-width', constants.defaultLinkStrokeWidth)\n      .attr('stroke', d => {\n        return 'url(#' + utils.getLinkGradientId(d) + ')';\n      })\n      .transition(utils.transitionLinear(durationSecond))\n      .style('stroke-opacity', 1);\n  }\n\n  public applyLinkHighlight(linkEles: d3.Selection<SVGLineElement, Link, d3.BaseType, any>) {\n    linkEles\n      .transition()\n      .duration(durationLong)\n      .style('stroke-opacity', 1);\n  }\n\n  public applyLinkMouseOver(linkEles: d3.Selection<SVGLineElement, Link, d3.BaseType, any>) {\n    linkEles.attr('stroke-width', constants.defaultLinkStrokeWidth * 3);\n  }\n\n  public applyLinkMouseOut(linkEles: d3.Selection<SVGLineElement, Link, d3.BaseType, any>) {\n    linkEles.attr('stroke-width', constants.defaultLinkStrokeWidth);\n  }\n\n  public applyLinkUnhighlighted(linkEles: d3.Selection<SVGLineElement, Link, d3.BaseType, any>) {\n    linkEles\n      .transition()\n      .duration(durationLong)\n      .style('stroke-opacity', this.showOnlyHighlighted ? 0 : constants.everythingElseOpacity);\n  }\n\n  public applyLinkGradientDefault(linkGradientEles: d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any>) {\n    const stopOne = linkGradientEles.selectAll('stop:nth-child(1)');\n    const stopTwo = linkGradientEles.selectAll('stop:nth-child(2)');\n    linkGradientEles.attr('id', utils.getLinkGradientId).attr('gradientUnits', 'userSpaceOnUse');\n    stopOne.attr('offset', '0%').attr('stop-color', constants.linkGradientColorStart);\n    stopTwo\n      .attr('offset', '100%')\n      .attr('stop-color', this.invertedBackground ? constants.linkGradientColorEndInverted : constants.linkGradientColorEnd);\n  }\n\n  public applyLinkGradientHighlight(linkGradientEles: d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any>) {\n    linkGradientEles\n      .selectAll('stop:nth-child(2)')\n      .transition()\n      .duration(durationLong)\n      .attr('stop-color', this.invertedBackground ? constants.linkGradientColorEndInverted : constants.linkGradientColorEnd);\n  }\n\n  public applyLinkGradientUnhighlighted(linkGradientEles: d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any>) {\n    linkGradientEles\n      .selectAll('stop:nth-child(2)')\n      .transition()\n      .duration(durationLong)\n      .attr('stop-color', this.invertedBackground ? constants.linkGradientColorEndInverted : constants.linkGradientColorEnd);\n  }\n\n  public applyHullDefault(hullEles: d3.Selection<SVGPathElement, Hull, BaseType, any>) {\n    hullEles\n      .attr('d', utils.drawCluster)\n      .transition()\n      .duration(durationLong)\n      .style('fill', (d: Node) => constants.colorScale(d.group || ''))\n      .style('fill-opacity', 0.3);\n  }\n\n  public applyHullHighlight(hullEles: d3.Selection<SVGPathElement, Hull, BaseType, any>) {\n    hullEles\n      .transition()\n      .duration(durationLong)\n      .style('fill', constants.highlightColor)\n      .style('fill-opacity', this.showOnlyHighlighted ? 0 : 0.2);\n  }\n\n  public applyHullUnhighlighted(hullEles: d3.Selection<SVGPathElement, Hull, BaseType, any>) {\n    hullEles\n      .transition()\n      .duration(durationLong)\n      .style('fill', constants.everythingElseColor)\n      .style('fill-opacity', this.showOnlyHighlighted ? 0 : 0.08);\n  }\n}\n\nfunction clearStates(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n  nodeEles.classed(nodeStateDefault.className, false);\n  nodeEles.classed(nodeStateHighlight.className, false);\n  nodeEles.classed(nodeStateSearch.className, false);\n  nodeEles.classed(nodeStateHighlightNeighbour.className, false);\n  nodeEles.classed(nodeStateUnhighlighted.className, false);\n}\n\nfunction getNodeStateProperties(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>): NodeStateProperties {\n  if (nodeEles.classed(nodeStateDefault.className)) {\n    return nodeStateDefault;\n  } else if (nodeEles.classed(nodeStateHighlight.className)) {\n    return nodeStateHighlight;\n  } else if (nodeEles.classed(nodeStateSearch.className)) {\n    return nodeStateSearch;\n  } else if (nodeEles.classed(nodeStateHighlightNeighbour.className)) {\n    return nodeStateHighlightNeighbour;\n  } else if (nodeEles.classed(nodeStateUnhighlighted.className)) {\n    return nodeStateUnhighlighted;\n  }\n  return nodeStateDefault;\n}\n","export function getUrlParameter(sParam: string): string | null {\n  const sPageURL = decodeURIComponent(window.location.search.substring(1));\n  return getKeysFromString(sPageURL, sParam);\n}\n\nexport function setUrlParameter(sParam: string, sValue: string) {\n  const sPageURL = decodeURIComponent(window.location.search.substring(1));\n\n  const sURLQueryParams = updateKeysInString(sPageURL, [{ sParam, sValue }]);\n\n  const queryFilters = '?' + sURLQueryParams;\n  window.history.pushState({}, '', queryFilters);\n}\n\nconst paramArraySeparator: string = '},{';\n\nexport function getUrlParameterAsArray(sParam: string): string[] {\n  const paramValueStr = getUrlParameter(sParam);\n  if (paramValueStr === null) {\n    return [];\n  }\n  if (paramValueStr.length > 1) {\n    const p = paramValueStr.substring(1, paramValueStr.length - 1);\n    const paramValues = p.split(paramArraySeparator).map(s =>\n      s\n        .replace(/zzamp/g, '&')\n        .replace(/zzeq/g, '=')\n        .replace(/zzhash/g, '#')\n        .replace(/zzpercent/g, '%')\n    );\n    return paramValues;\n  }\n  return [];\n}\n\nexport function setUrlParameterAsArray(sParam: string, sValueArray: string[]) {\n  let sValue = '';\n  if (sValueArray.length > 0) {\n    sValue =\n      '{' +\n      sValueArray\n        .map(s =>\n          s\n            .replace(/&/g, 'zzamp')\n            .replace(/=/g, 'zzeq')\n            .replace(/#/g, 'zzhash')\n            .replace(/%/g, 'zzpercent')\n        )\n        .join(paramArraySeparator) +\n      '}';\n  }\n  setUrlParameter(sParam, sValue);\n}\n\nfunction getKeysFromString(keysString: string, sParam: string): string | null {\n  const sURLVariables = keysString.split('&');\n  for (const sUrlVariable of sURLVariables) {\n    const sParameterName = sUrlVariable.split('=');\n\n    if (sParameterName[0] === sParam) {\n      return sParameterName[1] === undefined ? null : sParameterName[1];\n    }\n  }\n  return null;\n}\n\nfunction updateKeysInString(keysString: string, paramPairs: Array<{ sParam: string; sValue: string }>): string {\n  const sURLVariables = keysString.length > 0 ? keysString.split('&') : [];\n  for (const paramPair of paramPairs) {\n    let parameterUpdated = false;\n    for (let i = 0; i < sURLVariables.length; i++) {\n      const sParameterName = sURLVariables[i].split('=');\n\n      if (sParameterName[0] === paramPair.sParam) {\n        sURLVariables[i] = paramPair.sParam + '=' + (paramPair.sValue || '');\n        parameterUpdated = true;\n      }\n    }\n    if (parameterUpdated === false) {\n      sURLVariables.push(paramPair.sParam + '=' + (paramPair.sValue || ''));\n    }\n  }\n  return sURLVariables.join('&');\n}\n","import './app.css';\nimport './forms.css';\nimport * as diagram from './diagram';\nimport * as React from 'react';\nimport { getUrlParameterAsArray, setUrlParameterAsArray, getUrlParameter, setUrlParameter } from './utils/url-query-param-utils';\n\nexport interface AppState {\n  inputHighlightText: string;\n  showAllLabels: boolean;\n  showOnlyHighlighted: boolean;\n  highlightedNodeNames: string[];\n  invertBackground: boolean;\n  hasForceSimulation: boolean;\n}\n\nconst urlParamLabelShowOnlyHighlighted = 'showHlOnly';\nconst urlParamLabelHighlightedNodes = 'hlNodes';\n\nexport class App extends React.Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props);\n\n    let showOnlyHighlighted = getUrlParameter(urlParamLabelShowOnlyHighlighted) === 'y';\n    const highlightedNodeNames = getUrlParameterAsArray(urlParamLabelHighlightedNodes);\n    if (showOnlyHighlighted && highlightedNodeNames.length === 0) {\n      setUrlParameter(urlParamLabelShowOnlyHighlighted, '');\n      showOnlyHighlighted = false;\n    }\n\n    this.state = {\n      inputHighlightText: '',\n      showAllLabels: false,\n      showOnlyHighlighted,\n      highlightedNodeNames,\n      invertBackground: false,\n      hasForceSimulation: true,\n    };\n\n    this.handleInputHighlightText = this.handleInputHighlightText.bind(this);\n    this.handleShowAllLabels = this.handleShowAllLabels.bind(this);\n    this.handleShowOnlyHighlighted = this.handleShowOnlyHighlighted.bind(this);\n    this.handleHighlightedNodesChanged = this.handleHighlightedNodesChanged.bind(this);\n    this.updateShowAllLabels = this.updateShowAllLabels.bind(this);\n    this.updateInputHighlightText = this.updateInputHighlightText.bind(this);\n    this.handleInvertBackground = this.handleInvertBackground.bind(this);\n    this.handleHasForceSimulation = this.handleHasForceSimulation.bind(this);\n    this.handleSearchForNodesClick = this.handleSearchForNodesClick.bind(this);\n  }\n\n  public componentDidMount() {\n    diagram.load(this.handleHighlightedNodesChanged, this.state.highlightedNodeNames, this.state.showOnlyHighlighted);\n  }\n\n  public render() {\n    return (\n      <div>\n        <div className=\"header row\">\n          <h1 className=\"col-4\">Service Registry Diagram</h1>\n          <div className=\"col-8 config-box\">\n            <label className={this.state.showOnlyHighlighted ? 'disabled' : ''}>Search</label>\n            <input\n              name=\"inputSearch\"\n              type=\"text\"\n              onChange={this.handleInputHighlightText}\n              value={this.state.inputHighlightText}\n              disabled={this.state.showOnlyHighlighted}\n            />\n            <button id=\"btnHighlight\" onClick={this.handleSearchForNodesClick} disabled={this.state.showOnlyHighlighted}>\n              Highlight\n            </button>\n            <input\n              id=\"chkboxShowAllLabels\"\n              type=\"checkbox\"\n              checked={this.state.showAllLabels}\n              onChange={this.handleShowAllLabels}\n              disabled={this.state.showOnlyHighlighted}\n            />\n            <label htmlFor=\"chkboxShowAllLabels\">Show all labels</label>\n            <input\n              id=\"chkboxShowOnlyHighlighted\"\n              type=\"checkbox\"\n              checked={this.state.showOnlyHighlighted}\n              onChange={this.handleShowOnlyHighlighted}\n              disabled={this.state.highlightedNodeNames.length === 0}\n            />\n            <label htmlFor=\"chkboxShowOnlyHighlighted\">Show only highlighted</label>\n            <input id=\"chkboxInvertBackground\" type=\"checkbox\" checked={this.state.invertBackground} onChange={this.handleInvertBackground} />\n            <label htmlFor=\"chkboxInvertBackground\">Invert Background</label>\n            <input id=\"chkboxHasForceSimulation\" type=\"checkbox\" checked={this.state.hasForceSimulation} onChange={this.handleHasForceSimulation} />\n            <label htmlFor=\"chkboxHasForceSimulation\">Force</label>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          <div id=\"diagram\" className={this.state.invertBackground ? 'inverted' : ''} />\n          <div id=\"info-box\">\n            <h2 className=\"title\" />\n            <div className=\"notes\" />\n            <table className=\"table\" />\n            <div className=\"timestamp\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private updateShowAllLabels(showAllLabels: boolean) {\n    this.setState({ showAllLabels });\n    diagram.showAllLabels(showAllLabels);\n  }\n\n  private updateInputHighlightText(txt: string) {\n    this.setState({ inputHighlightText: txt });\n    diagram.searchForNodes(txt);\n  }\n\n  private handleHighlightedNodesChanged(highlightedNodeNames: string[]) {\n    this.setState({ highlightedNodeNames });\n    setUrlParameterAsArray(urlParamLabelHighlightedNodes, highlightedNodeNames);\n    if (highlightedNodeNames.length === 0 && this.state.showOnlyHighlighted) {\n      this.setState({ showOnlyHighlighted: false });\n      setUrlParameter(urlParamLabelShowOnlyHighlighted, '');\n    }\n  }\n\n  private handleSearchForNodesClick() {\n    diagram.searchForNodes(this.state.inputHighlightText);\n  }\n\n  private handleInputHighlightText(event: React.ChangeEvent<HTMLInputElement>) {\n    const newVal = event.currentTarget.value;\n    this.updateInputHighlightText(newVal);\n    event.preventDefault();\n  }\n\n  private handleShowAllLabels(event: React.ChangeEvent<HTMLInputElement>) {\n    const newVal = event.currentTarget.checked;\n    this.updateShowAllLabels(newVal);\n  }\n\n  private handleShowOnlyHighlighted(event: React.ChangeEvent<HTMLInputElement>) {\n    const newVal = event.currentTarget.checked;\n    this.setState({ showOnlyHighlighted: newVal });\n    setUrlParameter(urlParamLabelShowOnlyHighlighted, newVal ? 'y' : '');\n    diagram.showOnlyHighlighted(newVal);\n    if (newVal === true && this.state.showAllLabels === true) {\n      this.updateShowAllLabels(false);\n    }\n  }\n\n  private handleInvertBackground(event: React.ChangeEvent<HTMLInputElement>) {\n    const newVal = event.currentTarget.checked;\n    this.setState({ invertBackground: newVal });\n    diagram.invertBackground(newVal);\n  }\n\n  private handleHasForceSimulation(event: React.ChangeEvent<HTMLInputElement>) {\n    const newVal = event.currentTarget.checked;\n    this.setState({ hasForceSimulation: newVal });\n    diagram.setHasForceSimulation(newVal);\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}